{
  "id": 649,
  "name": "Documentation",
  "variant": "project",
  "kind": 1,
  "flags": {},
  "children": [
    {
      "id": 650,
      "name": "@clerk/astro",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 651,
          "name": "client",
          "variant": "declaration",
          "kind": 2,
          "flags": {},
          "children": [
            {
              "id": 652,
              "name": "$authStore",
              "variant": "declaration",
              "kind": 32,
              "flags": {
                "isConst": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A client side store that is prepopulated with the authentication context during SSR.\nIt is a nanostore, for instructions on how to use nanostores please review the [documentation](https://github.com/nanostores/nanostores)"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nA simple example:\n\n$authStore.subscribe((auth) => console.log(auth.userId))\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "astro/src/stores/external.ts",
                  "line": 26,
                  "character": 13,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/stores/external.ts#L26"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/nanostores@0.11.3/node_modules/nanostores/atom/index.d.ts",
                  "qualifiedName": "ReadableAtom"
                },
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 653,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 654,
                          "name": "__experimental_factorVerificationAge",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 18,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "tuple",
                                "elements": [
                                  {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "number"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "id": 655,
                          "name": "actor",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 17,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "ActJWTClaim"
                                },
                                "name": "ActJWTClaim",
                                "package": "@clerk/types"
                              }
                            ]
                          }
                        },
                        {
                          "id": 656,
                          "name": "organization",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 12,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationResource"
                                },
                                "name": "OrganizationResource",
                                "package": "@clerk/types"
                              }
                            ]
                          }
                        },
                        {
                          "id": 657,
                          "name": "orgId",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 13,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ]
                          }
                        },
                        {
                          "id": 658,
                          "name": "orgPermissions",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 16,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "target": {
                                    "sourceFileName": "packages/types/src/index.ts",
                                    "qualifiedName": "Autocomplete"
                                  },
                                  "typeArguments": [
                                    {
                                      "type": "reference",
                                      "target": {
                                        "sourceFileName": "packages/types/src/index.ts",
                                        "qualifiedName": "OrganizationSystemPermissionKey"
                                      },
                                      "name": "OrganizationSystemPermissionKey",
                                      "package": "@clerk/types"
                                    },
                                    {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  ],
                                  "name": "Autocomplete",
                                  "package": "@clerk/types"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "id": 659,
                          "name": "orgRole",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 14,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ]
                          }
                        },
                        {
                          "id": 660,
                          "name": "orgSlug",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 15,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ]
                          }
                        },
                        {
                          "id": 661,
                          "name": "session",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 11,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "ActiveSessionResource"
                                },
                                "name": "ActiveSessionResource",
                                "package": "@clerk/types"
                              }
                            ]
                          }
                        },
                        {
                          "id": 662,
                          "name": "sessionId",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 10,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ]
                          }
                        },
                        {
                          "id": 663,
                          "name": "user",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 9,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "UserResource"
                                },
                                "name": "UserResource",
                                "package": "@clerk/types"
                              }
                            ]
                          }
                        },
                        {
                          "id": 664,
                          "name": "userId",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "shared/dist/deriveState.d.ts",
                              "line": 8,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "shared/dist/deriveState.d.ts",
                          "line": 7,
                          "character": 111
                        }
                      ]
                    }
                  }
                ],
                "name": "ReadableAtom",
                "package": "nanostores"
              },
              "defaultValue": "..."
            },
            {
              "id": 665,
              "name": "$clerkStore",
              "variant": "declaration",
              "kind": 32,
              "flags": {
                "isConst": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A client side store that is populated after clerk-js is instanciated.\nThe store returns the clerk instance or "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nIt is a nanostore, for instructions on how to use nanostores please review the [documentation](https://github.com/nanostores/nanostores)"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nA simple example:\n\n$clerkStore.subscribe((clerk) => console.log(clerk.publishableKey))\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "astro/src/stores/external.ts",
                  "line": 97,
                  "character": 13,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/stores/external.ts#L97"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/nanostores@0.11.3/node_modules/nanostores/atom/index.d.ts",
                  "qualifiedName": "ReadableAtom"
                },
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "Clerk"
                        },
                        "name": "Clerk",
                        "package": "@clerk/types"
                      }
                    ]
                  }
                ],
                "name": "ReadableAtom",
                "package": "nanostores"
              },
              "defaultValue": "..."
            },
            {
              "id": 666,
              "name": "$clientStore",
              "variant": "declaration",
              "kind": 32,
              "flags": {
                "isConst": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A client side store that is populated after clerk-js has loaded.\nThe store returns the clerk client or "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nIt is a nanostore, for instructions on how to use nanostores please review the [documentation](https://github.com/nanostores/nanostores)"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nA simple example:\n\n$clientStore.subscribe((client) => console.log(client.activeSessions))\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "astro/src/stores/external.ts",
                  "line": 85,
                  "character": 13,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/stores/external.ts#L85"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/nanostores@0.11.3/node_modules/nanostores/atom/index.d.ts",
                  "qualifiedName": "ReadableAtom"
                },
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "ClientResource"
                        },
                        "name": "ClientResource",
                        "package": "@clerk/types"
                      }
                    ]
                  }
                ],
                "name": "ReadableAtom",
                "package": "nanostores"
              },
              "defaultValue": "..."
            },
            {
              "id": 667,
              "name": "$isLoadedStore",
              "variant": "declaration",
              "kind": 32,
              "flags": {
                "isConst": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A client side store that returns the loaded state of clerk-js."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nA simple example:\n\n$isLoadedStore.subscribe((authloaded => console.log(loaded))\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "astro/src/stores/external.ts",
                  "line": 15,
                  "character": 13,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/stores/external.ts#L15"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/nanostores@0.11.3/node_modules/nanostores/atom/index.d.ts",
                  "qualifiedName": "ReadableAtom"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                ],
                "name": "ReadableAtom",
                "package": "nanostores"
              },
              "defaultValue": "..."
            },
            {
              "id": 668,
              "name": "$organizationStore",
              "variant": "declaration",
              "kind": 32,
              "flags": {
                "isConst": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A client side store that is populated after clerk-js has loaded.\nThe store returns the active organization of the authenticated user or "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nIt is a nanostore, for instructions on how to use nanostores please review the [documentation](https://github.com/nanostores/nanostores)"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nA simple example:\n\n$organizationStore.subscribe((org) => console.log(org.id))\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "astro/src/stores/external.ts",
                  "line": 73,
                  "character": 13,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/stores/external.ts#L73"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/nanostores@0.11.3/node_modules/nanostores/atom/index.d.ts",
                  "qualifiedName": "ReadableAtom"
                },
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "OrganizationResource"
                        },
                        "name": "OrganizationResource",
                        "package": "@clerk/types"
                      }
                    ]
                  }
                ],
                "name": "ReadableAtom",
                "package": "nanostores"
              },
              "defaultValue": "..."
            },
            {
              "id": 669,
              "name": "$sessionListStore",
              "variant": "declaration",
              "kind": 32,
              "flags": {
                "isConst": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A client side store that is populated after clerk-js has loaded.\nThe store returns all the sessions of the current clerk client or "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nIt is a nanostore, for instructions on how to use nanostores please review the [documentation](https://github.com/nanostores/nanostores)"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nA simple example:\n\n$sessionListStore.subscribe((sessionList) => sessionList.map((session) => console.log('Session id:', sessino.id) ))\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "astro/src/stores/external.ts",
                  "line": 109,
                  "character": 13,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/stores/external.ts#L109"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/nanostores@0.11.3/node_modules/nanostores/atom/index.d.ts",
                  "qualifiedName": "ReadableAtom"
                },
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "target": {
                            "sourceFileName": "packages/types/src/index.ts",
                            "qualifiedName": "SessionResource"
                          },
                          "name": "SessionResource",
                          "package": "@clerk/types"
                        }
                      }
                    ]
                  }
                ],
                "name": "ReadableAtom",
                "package": "nanostores"
              },
              "defaultValue": "..."
            },
            {
              "id": 670,
              "name": "$sessionStore",
              "variant": "declaration",
              "kind": 32,
              "flags": {
                "isConst": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A client side store that is populated after clerk-js has loaded.\nThe store returns the session of the authenticated user or "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nIt is a nanostore, for instructions on how to use nanostores please review the [documentation](https://github.com/nanostores/nanostores)"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nA simple example:\n\n$sessionStore.subscribe((session) => console.log(session.id))\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "astro/src/stores/external.ts",
                  "line": 61,
                  "character": 13,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/stores/external.ts#L61"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/nanostores@0.11.3/node_modules/nanostores/atom/index.d.ts",
                  "qualifiedName": "ReadableAtom"
                },
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "ActiveSessionResource"
                        },
                        "name": "ActiveSessionResource",
                        "package": "@clerk/types"
                      }
                    ]
                  }
                ],
                "name": "ReadableAtom",
                "package": "nanostores"
              },
              "defaultValue": "..."
            },
            {
              "id": 671,
              "name": "$signInStore",
              "variant": "declaration",
              "kind": 32,
              "flags": {
                "isConst": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A client side store that is populated after clerk-js has loaded.\nThe store returns a "
                  },
                  {
                    "kind": "code",
                    "text": "`SignInResource`"
                  },
                  {
                    "kind": "text",
                    "text": " or "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nIt is a nanostore, for instructions on how to use nanostores please review the [documentation](https://github.com/nanostores/nanostores)"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nA simple example:\n\n$signInStore.subscribe((signIn) => console.log(signIn.status))\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "astro/src/stores/external.ts",
                  "line": 121,
                  "character": 13,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/stores/external.ts#L121"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/nanostores@0.11.3/node_modules/nanostores/atom/index.d.ts",
                  "qualifiedName": "ReadableAtom"
                },
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "SignInResource"
                        },
                        "name": "SignInResource",
                        "package": "@clerk/types"
                      }
                    ]
                  }
                ],
                "name": "ReadableAtom",
                "package": "nanostores"
              },
              "defaultValue": "..."
            },
            {
              "id": 672,
              "name": "$signUpStore",
              "variant": "declaration",
              "kind": 32,
              "flags": {
                "isConst": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A client side store that is populated after clerk-js has loaded.\nThe store returns a "
                  },
                  {
                    "kind": "code",
                    "text": "`SignUpResource`"
                  },
                  {
                    "kind": "text",
                    "text": " or "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nIt is a nanostore, for instructions on how to use nanostores please review the [documentation](https://github.com/nanostores/nanostores)"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nA simple example:\n\n$signUpStore.subscribe((signUp) => console.log(signUp.status))\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "astro/src/stores/external.ts",
                  "line": 133,
                  "character": 13,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/stores/external.ts#L133"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/nanostores@0.11.3/node_modules/nanostores/atom/index.d.ts",
                  "qualifiedName": "ReadableAtom"
                },
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "SignUpResource"
                        },
                        "name": "SignUpResource",
                        "package": "@clerk/types"
                      }
                    ]
                  }
                ],
                "name": "ReadableAtom",
                "package": "nanostores"
              },
              "defaultValue": "..."
            },
            {
              "id": 673,
              "name": "$userStore",
              "variant": "declaration",
              "kind": 32,
              "flags": {
                "isConst": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A client side store that is populated after clerk-js has loaded.\nThe store returns back the authenticated user or "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nIt is a nanostore, for instructions on how to use nanostores please review the [documentation](https://github.com/nanostores/nanostores)"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```ts\nA simple example:\n\n$userStore.subscribe((user) => console.log(user.id))\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "astro/src/stores/external.ts",
                  "line": 49,
                  "character": 13,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/stores/external.ts#L49"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/nanostores@0.11.3/node_modules/nanostores/atom/index.d.ts",
                  "qualifiedName": "ReadableAtom"
                },
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "UserResource"
                        },
                        "name": "UserResource",
                        "package": "@clerk/types"
                      }
                    ]
                  }
                ],
                "name": "ReadableAtom",
                "package": "nanostores"
              },
              "defaultValue": "..."
            },
            {
              "id": 674,
              "name": "updateClerkOptions",
              "variant": "declaration",
              "kind": 64,
              "flags": {},
              "sources": [
                {
                  "fileName": "astro/src/internal/create-clerk-instance.ts",
                  "line": 76,
                  "character": 9,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/internal/create-clerk-instance.ts#L76"
                }
              ],
              "signatures": [
                {
                  "id": 675,
                  "name": "updateClerkOptions",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "astro/src/internal/create-clerk-instance.ts",
                      "line": 76,
                      "character": 9,
                      "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/internal/create-clerk-instance.ts#L76"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 676,
                      "name": "options",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 682,
                        "name": "AstroClerkUpdateOptions",
                        "package": "@clerk/astro"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Variables",
              "children": [652, 665, 666, 667, 668, 669, 670, 671, 672, 673]
            },
            {
              "title": "Functions",
              "children": [674]
            }
          ],
          "sources": [
            {
              "fileName": "astro/src/client/index.ts",
              "line": 1,
              "character": 0,
              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/client/index.ts#L1"
            }
          ]
        },
        {
          "id": 677,
          "name": "types",
          "variant": "declaration",
          "kind": 2,
          "flags": {},
          "children": [
            {
              "id": 678,
              "name": "AstroClerkCreateInstanceParams",
              "variant": "declaration",
              "kind": 2097152,
              "flags": {},
              "sources": [
                {
                  "fileName": "astro/src/types.ts",
                  "line": 28,
                  "character": 5,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L28"
                }
              ],
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "target": 681,
                    "name": "AstroClerkIntegrationParams",
                    "package": "@clerk/astro"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 679,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 680,
                          "name": "publishableKey",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 28,
                              "character": 70,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L28"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [680]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 28,
                          "character": 68,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L28"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": 681,
              "name": "AstroClerkIntegrationParams",
              "variant": "declaration",
              "kind": 2097152,
              "flags": {},
              "sources": [
                {
                  "fileName": "astro/src/types.ts",
                  "line": 14,
                  "character": 5,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L14"
                }
              ],
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/types/src/index.ts",
                      "qualifiedName": "Without"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "ClerkOptions"
                        },
                        "name": "ClerkOptions",
                        "package": "@clerk/types"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "isSatellite"
                          },
                          {
                            "type": "literal",
                            "value": "sdkMetadata"
                          },
                          {
                            "type": "literal",
                            "value": "standardBrowser"
                          },
                          {
                            "type": "literal",
                            "value": "selectInitialSession"
                          },
                          {
                            "type": "literal",
                            "value": "routerReplace"
                          },
                          {
                            "type": "literal",
                            "value": "routerDebug"
                          },
                          {
                            "type": "literal",
                            "value": "routerPush"
                          },
                          {
                            "type": "literal",
                            "value": "polling"
                          },
                          {
                            "type": "literal",
                            "value": "touchSession"
                          }
                        ]
                      }
                    ],
                    "name": "Without",
                    "package": "@clerk/types"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/types/src/index.ts",
                      "qualifiedName": "MultiDomainAndOrProxyPrimitives"
                    },
                    "name": "MultiDomainAndOrProxyPrimitives",
                    "package": "@clerk/types"
                  }
                ]
              }
            },
            {
              "id": 682,
              "name": "AstroClerkUpdateOptions",
              "variant": "declaration",
              "kind": 2097152,
              "flags": {},
              "sources": [
                {
                  "fileName": "astro/src/types.ts",
                  "line": 12,
                  "character": 5,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L12"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Pick"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/types/src/index.ts",
                      "qualifiedName": "ClerkOptions"
                    },
                    "name": "ClerkOptions",
                    "package": "@clerk/types"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "appearance"
                      },
                      {
                        "type": "literal",
                        "value": "localization"
                      }
                    ]
                  }
                ],
                "name": "Pick",
                "package": "typescript"
              }
            },
            {
              "id": 683,
              "name": "BrowserClerk",
              "variant": "declaration",
              "kind": 256,
              "flags": {},
              "children": [
                {
                  "id": 684,
                  "name": "__experimental_closeUserVerification",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk user verification modal."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@experimantal",
                        "content": [
                          {
                            "kind": "text",
                            "text": "This API is still under active development and may change at any moment."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4014,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 685,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4014,
                          "character": 42
                        }
                      ],
                      "signatures": [
                        {
                          "id": 686,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4014,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 979,
                    "name": "HeadlessBrowserClerk.__experimental_closeUserVerification"
                  }
                },
                {
                  "id": 687,
                  "name": "__experimental_openUserVerification",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk UserVerification component in a modal."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@experimantal",
                        "content": [
                          {
                            "kind": "text",
                            "text": "This API is still under active development and may change at any moment."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4009,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 688,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4009,
                          "character": 41
                        }
                      ],
                      "signatures": [
                        {
                          "id": 689,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4009,
                              "character": 41
                            }
                          ],
                          "parameters": [
                            {
                              "id": 690,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional user verification configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "__experimental_UserVerificationModalProps"
                                },
                                "name": "__experimental_UserVerificationModalProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 982,
                    "name": "HeadlessBrowserClerk.__experimental_openUserVerification"
                  }
                },
                {
                  "id": 691,
                  "name": "__experimental_prefetchOrganizationSwitcher",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Prefetches the data displayed by an organization switcher.\nIt can be used when "
                      },
                      {
                        "kind": "code",
                        "text": "`mountOrganizationSwitcher({ asStandalone: true})`"
                      },
                      {
                        "kind": "text",
                        "text": ", to avoid unwanted loading states."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@experimantal",
                        "content": [
                          {
                            "kind": "text",
                            "text": "This API is still under active development and may change at any moment."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4164,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 692,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4164,
                          "character": 49
                        }
                      ],
                      "signatures": [
                        {
                          "id": 693,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4164,
                              "character": 49
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 986,
                    "name": "HeadlessBrowserClerk.__experimental_prefetchOrganizationSwitcher"
                  }
                },
                {
                  "id": 694,
                  "name": "__internal_country",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true,
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3987,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 989,
                    "name": "HeadlessBrowserClerk.__internal_country"
                  }
                },
                {
                  "id": 695,
                  "name": "__internal_getOption",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3964,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 696,
                      "name": "__internal_getOption",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 3964,
                          "character": 4
                        }
                      ],
                      "typeParameters": [
                        {
                          "id": 697,
                          "name": "K",
                          "variant": "typeParam",
                          "kind": 131072,
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "appearance"
                              },
                              {
                                "type": "literal",
                                "value": "localization"
                              },
                              {
                                "type": "literal",
                                "value": "routerPush"
                              },
                              {
                                "type": "literal",
                                "value": "routerReplace"
                              },
                              {
                                "type": "literal",
                                "value": "routerDebug"
                              },
                              {
                                "type": "literal",
                                "value": "signInForceRedirectUrl"
                              },
                              {
                                "type": "literal",
                                "value": "signInFallbackRedirectUrl"
                              },
                              {
                                "type": "literal",
                                "value": "signUpForceRedirectUrl"
                              },
                              {
                                "type": "literal",
                                "value": "signUpFallbackRedirectUrl"
                              },
                              {
                                "type": "unknown",
                                "name": "keyof LegacyRedirectProps"
                              },
                              {
                                "type": "literal",
                                "value": "afterSignOutUrl"
                              },
                              {
                                "type": "literal",
                                "value": "afterMultiSessionSingleSignOutUrl"
                              },
                              {
                                "type": "literal",
                                "value": "polling"
                              },
                              {
                                "type": "literal",
                                "value": "selectInitialSession"
                              },
                              {
                                "type": "literal",
                                "value": "standardBrowser"
                              },
                              {
                                "type": "literal",
                                "value": "supportEmail"
                              },
                              {
                                "type": "literal",
                                "value": "touchSession"
                              },
                              {
                                "type": "literal",
                                "value": "signInUrl"
                              },
                              {
                                "type": "literal",
                                "value": "signUpUrl"
                              },
                              {
                                "type": "literal",
                                "value": "allowedRedirectOrigins"
                              },
                              {
                                "type": "literal",
                                "value": "isSatellite"
                              },
                              {
                                "type": "literal",
                                "value": "telemetry"
                              },
                              {
                                "type": "literal",
                                "value": "sdkMetadata"
                              },
                              {
                                "type": "literal",
                                "value": "waitlistUrl"
                              },
                              {
                                "type": "literal",
                                "value": "experimental"
                              },
                              {
                                "type": "literal",
                                "value": "__experimental_router"
                              }
                            ]
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 698,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": 992,
                            "name": "K",
                            "package": "@clerk/types",
                            "refersToTypeParameter": true
                          }
                        }
                      ],
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "target": 992,
                          "name": "K",
                          "package": "@clerk/types",
                          "refersToTypeParameter": true
                        },
                        "objectType": {
                          "type": "reference",
                          "target": {
                            "sourceFileName": "packages/types/src/index.ts",
                            "qualifiedName": "ClerkOptions"
                          },
                          "name": "ClerkOptions",
                          "package": "@clerk/types"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 991,
                        "name": "HeadlessBrowserClerk.__internal_getOption"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 990,
                    "name": "HeadlessBrowserClerk.__internal_getOption"
                  }
                },
                {
                  "id": 699,
                  "name": "addListener",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Register a listener that triggers a callback each time important Clerk resources are changed.\nAllows to hook up at different steps in the sign up, sign in processes.\n\nSome important checkpoints:\n   When there is an active session, user === session.user.\n   When there is no active session, user and session will both be null.\n   When a session is loading, user and session will be undefined."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4199,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 700,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4199,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 701,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "comment": {
                            "summary": [],
                            "blockTags": [
                              {
                                "tag": "@returns",
                                "content": [
                                  {
                                    "kind": "text",
                                    "text": "- Unsubscribe callback"
                                  }
                                ]
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4199,
                              "character": 17
                            }
                          ],
                          "parameters": [
                            {
                              "id": 702,
                              "name": "callback",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Callback function receiving the most updated Clerk resources after a change."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "ListenerCallback"
                                },
                                "name": "ListenerCallback",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "UnsubscribeCallback"
                            },
                            "name": "UnsubscribeCallback",
                            "package": "@clerk/types"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 994,
                    "name": "HeadlessBrowserClerk.addListener"
                  }
                },
                {
                  "id": 703,
                  "name": "authenticateWithCoinbaseWallet",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Authenticates user using their Coinbase Smart Wallet and browser extension"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4329,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 704,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4329,
                          "character": 36
                        }
                      ],
                      "signatures": [
                        {
                          "id": 705,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4329,
                              "character": 36
                            }
                          ],
                          "parameters": [
                            {
                              "id": 706,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "AuthenticateWithCoinbaseWalletParams"
                                },
                                "name": "AuthenticateWithCoinbaseWalletParams",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 998,
                    "name": "HeadlessBrowserClerk.authenticateWithCoinbaseWallet"
                  }
                },
                {
                  "id": 707,
                  "name": "authenticateWithGoogleOneTap",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Authenticates user using a Google token generated from Google identity services."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4337,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 708,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4337,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 709,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4337,
                              "character": 34
                            }
                          ],
                          "parameters": [
                            {
                              "id": 710,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "AuthenticateWithGoogleOneTapParams"
                                },
                                "name": "AuthenticateWithGoogleOneTapParams",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/types/src/index.ts",
                                      "qualifiedName": "SignInResource"
                                    },
                                    "name": "SignInResource",
                                    "package": "@clerk/types"
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/types/src/index.ts",
                                      "qualifiedName": "SignUpResource"
                                    },
                                    "name": "SignUpResource",
                                    "package": "@clerk/types"
                                  }
                                ]
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1002,
                    "name": "HeadlessBrowserClerk.authenticateWithGoogleOneTap"
                  }
                },
                {
                  "id": 711,
                  "name": "authenticateWithMetamask",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Authenticates user using their Metamask browser extension"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4325,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 712,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4325,
                          "character": 30
                        }
                      ],
                      "signatures": [
                        {
                          "id": 713,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4325,
                              "character": 30
                            }
                          ],
                          "parameters": [
                            {
                              "id": 714,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "AuthenticateWithMetamaskParams"
                                },
                                "name": "AuthenticateWithMetamaskParams",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1006,
                    "name": "HeadlessBrowserClerk.authenticateWithMetamask"
                  }
                },
                {
                  "id": 715,
                  "name": "authenticateWithWeb3",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Authenticates user using their Web3 Wallet browser extension"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4333,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 716,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4333,
                          "character": 26
                        }
                      ],
                      "signatures": [
                        {
                          "id": 717,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4333,
                              "character": 26
                            }
                          ],
                          "parameters": [
                            {
                              "id": 718,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "ClerkAuthenticateWithWeb3Params"
                                },
                                "name": "ClerkAuthenticateWithWeb3Params",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1010,
                    "name": "HeadlessBrowserClerk.authenticateWithWeb3"
                  }
                },
                {
                  "id": 719,
                  "name": "buildAfterMultiSessionSingleSignOutUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4256,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 720,
                      "name": "buildAfterMultiSessionSingleSignOutUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured afterMultiSessionSingleSignOutUrl of the instance."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4256,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1015,
                        "name": "HeadlessBrowserClerk.buildAfterMultiSessionSingleSignOutUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1014,
                    "name": "HeadlessBrowserClerk.buildAfterMultiSessionSingleSignOutUrl"
                  }
                },
                {
                  "id": 721,
                  "name": "buildAfterSignInUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4244,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 722,
                      "name": "buildAfterSignInUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured afterSignInUrl of the instance."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4244,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1017,
                        "name": "HeadlessBrowserClerk.buildAfterSignInUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1016,
                    "name": "HeadlessBrowserClerk.buildAfterSignInUrl"
                  }
                },
                {
                  "id": 723,
                  "name": "buildAfterSignOutUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4252,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 724,
                      "name": "buildAfterSignOutUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured afterSignOutUrl of the instance."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4252,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1019,
                        "name": "HeadlessBrowserClerk.buildAfterSignOutUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1018,
                    "name": "HeadlessBrowserClerk.buildAfterSignOutUrl"
                  }
                },
                {
                  "id": 725,
                  "name": "buildAfterSignUpUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4248,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 726,
                      "name": "buildAfterSignUpUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured afterSignInUrl of the instance."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4248,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1021,
                        "name": "HeadlessBrowserClerk.buildAfterSignUpUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1020,
                    "name": "HeadlessBrowserClerk.buildAfterSignUpUrl"
                  }
                },
                {
                  "id": 727,
                  "name": "buildCreateOrganizationUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4236,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 728,
                      "name": "buildCreateOrganizationUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured url where <CreateOrganization /> is mounted or a custom create-organization page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4236,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1023,
                        "name": "HeadlessBrowserClerk.buildCreateOrganizationUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1022,
                    "name": "HeadlessBrowserClerk.buildCreateOrganizationUrl"
                  }
                },
                {
                  "id": 729,
                  "name": "buildOrganizationProfileUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4240,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 730,
                      "name": "buildOrganizationProfileUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured url where <OrganizationProfile /> is mounted or a custom organization-profile page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4240,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1025,
                        "name": "HeadlessBrowserClerk.buildOrganizationProfileUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1024,
                    "name": "HeadlessBrowserClerk.buildOrganizationProfileUrl"
                  }
                },
                {
                  "id": 731,
                  "name": "buildSignInUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4222,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 732,
                      "name": "buildSignInUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured url where <SignIn/> is mounted or a custom sign-in page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4222,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 733,
                          "name": "opts",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "A "
                              },
                              {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "RedirectOptions",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "RedirectOptions"
                                }
                              },
                              {
                                "kind": "text",
                                "text": " object"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "RedirectOptions"
                            },
                            "name": "RedirectOptions",
                            "package": "@clerk/types"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1027,
                        "name": "HeadlessBrowserClerk.buildSignInUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1026,
                    "name": "HeadlessBrowserClerk.buildSignInUrl"
                  }
                },
                {
                  "id": 734,
                  "name": "buildSignUpUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4228,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 735,
                      "name": "buildSignUpUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured url where <SignUp/> is mounted or a custom sign-up page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4228,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 736,
                          "name": "opts",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "A "
                              },
                              {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "RedirectOptions",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "RedirectOptions"
                                }
                              },
                              {
                                "kind": "text",
                                "text": " object"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "RedirectOptions"
                            },
                            "name": "RedirectOptions",
                            "package": "@clerk/types"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1030,
                        "name": "HeadlessBrowserClerk.buildSignUpUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1029,
                    "name": "HeadlessBrowserClerk.buildSignUpUrl"
                  }
                },
                {
                  "id": 737,
                  "name": "buildUrlWithAuth",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4216,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 738,
                      "name": "buildUrlWithAuth",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Decorates the provided url with the auth token for development instances."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4216,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 739,
                          "name": "to",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1033,
                        "name": "HeadlessBrowserClerk.buildUrlWithAuth"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1032,
                    "name": "HeadlessBrowserClerk.buildUrlWithAuth"
                  }
                },
                {
                  "id": 740,
                  "name": "buildUserProfileUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4232,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 741,
                      "name": "buildUserProfileUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the url where <UserProfile /> is mounted or a custom user-profile page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4232,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1036,
                        "name": "HeadlessBrowserClerk.buildUserProfileUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1035,
                    "name": "HeadlessBrowserClerk.buildUserProfileUrl"
                  }
                },
                {
                  "id": 742,
                  "name": "buildWaitlistUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4260,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 743,
                      "name": "buildWaitlistUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured url where <Waitlist/> is mounted or a custom waitlist page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4260,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1038,
                        "name": "HeadlessBrowserClerk.buildWaitlistUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1037,
                    "name": "HeadlessBrowserClerk.buildWaitlistUrl"
                  }
                },
                {
                  "id": 744,
                  "name": "client",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Client handling most Clerk operations."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3979,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "ClientResource"
                        },
                        "name": "ClientResource",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1039,
                    "name": "HeadlessBrowserClerk.client"
                  }
                },
                {
                  "id": 745,
                  "name": "closeCreateOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk CreateOrganization modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4060,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 746,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4060,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 747,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4060,
                              "character": 29
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1040,
                    "name": "HeadlessBrowserClerk.closeCreateOrganization"
                  }
                },
                {
                  "id": 748,
                  "name": "closeGoogleOneTap",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Google One Tap component.\nIf the component is not already open, results in a noop."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4024,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 749,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4024,
                          "character": 23
                        }
                      ],
                      "signatures": [
                        {
                          "id": 750,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4024,
                              "character": 23
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1043,
                    "name": "HeadlessBrowserClerk.closeGoogleOneTap"
                  }
                },
                {
                  "id": 751,
                  "name": "closeOrganizationProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk OrganizationProfile modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4051,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 752,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4051,
                          "character": 30
                        }
                      ],
                      "signatures": [
                        {
                          "id": 753,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4051,
                              "character": 30
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1046,
                    "name": "HeadlessBrowserClerk.closeOrganizationProfile"
                  }
                },
                {
                  "id": 754,
                  "name": "closeSignIn",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk SignIn modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4003,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 755,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4003,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 756,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4003,
                              "character": 17
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1049,
                    "name": "HeadlessBrowserClerk.closeSignIn"
                  }
                },
                {
                  "id": 757,
                  "name": "closeSignUp",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk SignUp modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4033,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 758,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4033,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 759,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4033,
                              "character": 17
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1052,
                    "name": "HeadlessBrowserClerk.closeSignUp"
                  }
                },
                {
                  "id": 760,
                  "name": "closeUserProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk UserProfile modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4042,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 761,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4042,
                          "character": 22
                        }
                      ],
                      "signatures": [
                        {
                          "id": 762,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4042,
                              "character": 22
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1055,
                    "name": "HeadlessBrowserClerk.closeUserProfile"
                  }
                },
                {
                  "id": 763,
                  "name": "closeWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk Waitlist modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4069,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 764,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4069,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 765,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4069,
                              "character": 19
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1058,
                    "name": "HeadlessBrowserClerk.closeWaitlist"
                  }
                },
                {
                  "id": 766,
                  "name": "components",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "astro/src/types.ts",
                      "line": 39,
                      "character": 2,
                      "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L39"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 767,
                  "name": "createOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an organization, adding the current user as admin."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4341,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 768,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4341,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 769,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4341,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 770,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "CreateOrganizationParams"
                                },
                                "name": "CreateOrganizationParams",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationResource"
                                },
                                "name": "OrganizationResource",
                                "package": "@clerk/types"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1061,
                    "name": "HeadlessBrowserClerk.createOrganization"
                  }
                },
                {
                  "id": 771,
                  "name": "domain",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk Satellite Frontend API string."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3971,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1065,
                    "name": "HeadlessBrowserClerk.domain"
                  }
                },
                {
                  "id": 772,
                  "name": "frontendApi",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3965,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1066,
                    "name": "HeadlessBrowserClerk.frontendApi"
                  }
                },
                {
                  "id": 773,
                  "name": "getOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Retrieves a single organization by id."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4345,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 774,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4345,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 775,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4345,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 776,
                              "name": "organizationId",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationResource"
                                },
                                "name": "OrganizationResource",
                                "package": "@clerk/types"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1067,
                    "name": "HeadlessBrowserClerk.getOrganization"
                  }
                },
                {
                  "id": 777,
                  "name": "handleEmailLinkVerification",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Completes a Email Link flow  started by "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Clerk.client.signIn.createEmailLinkFlow"
                      },
                      {
                        "kind": "text",
                        "text": " or "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Clerk.client.signUp.createEmailLinkFlow"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4321,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 778,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4321,
                          "character": 33
                        }
                      ],
                      "signatures": [
                        {
                          "id": 779,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4321,
                              "character": 33
                            }
                          ],
                          "parameters": [
                            {
                              "id": 780,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "HandleEmailLinkVerificationParams"
                                },
                                "name": "HandleEmailLinkVerificationParams",
                                "package": "@clerk/types"
                              }
                            },
                            {
                              "id": 781,
                              "name": "customNavigate",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 782,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "types/dist/index.d.ts",
                                      "line": 4321,
                                      "character": 94
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 783,
                                      "name": "__type",
                                      "variant": "signature",
                                      "kind": 4096,
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "types/dist/index.d.ts",
                                          "line": 4321,
                                          "character": 94
                                        }
                                      ],
                                      "parameters": [
                                        {
                                          "id": 784,
                                          "name": "to",
                                          "variant": "param",
                                          "kind": 32768,
                                          "flags": {},
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "Promise"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "unknown"
                                          }
                                        ],
                                        "name": "Promise",
                                        "package": "typescript"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1071,
                    "name": "HeadlessBrowserClerk.handleEmailLinkVerification"
                  }
                },
                {
                  "id": 785,
                  "name": "handleGoogleOneTapCallback",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Completes a Google One Tap redirection flow started by\n"
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Clerk.authenticateWithGoogleOneTap",
                        "target": 1002
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4312,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 786,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4312,
                          "character": 32
                        }
                      ],
                      "signatures": [
                        {
                          "id": 787,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4312,
                              "character": 32
                            }
                          ],
                          "parameters": [
                            {
                              "id": 788,
                              "name": "signInOrUp",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/types/src/index.ts",
                                      "qualifiedName": "SignInResource"
                                    },
                                    "name": "SignInResource",
                                    "package": "@clerk/types"
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/types/src/index.ts",
                                      "qualifiedName": "SignUpResource"
                                    },
                                    "name": "SignUpResource",
                                    "package": "@clerk/types"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 789,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "HandleOAuthCallbackParams"
                                },
                                "name": "HandleOAuthCallbackParams",
                                "package": "@clerk/types"
                              }
                            },
                            {
                              "id": 790,
                              "name": "customNavigate",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 791,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "types/dist/index.d.ts",
                                      "line": 4312,
                                      "character": 130
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 792,
                                      "name": "__type",
                                      "variant": "signature",
                                      "kind": 4096,
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "types/dist/index.d.ts",
                                          "line": 4312,
                                          "character": 130
                                        }
                                      ],
                                      "parameters": [
                                        {
                                          "id": 793,
                                          "name": "to",
                                          "variant": "param",
                                          "kind": 32768,
                                          "flags": {},
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "Promise"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "unknown"
                                          }
                                        ],
                                        "name": "Promise",
                                        "package": "typescript"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1079,
                    "name": "HeadlessBrowserClerk.handleGoogleOneTapCallback"
                  }
                },
                {
                  "id": 794,
                  "name": "handleRedirectCallback",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Completes an OAuth or SAML redirection flow started by\n"
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Clerk.client.signIn.authenticateWithRedirect"
                      },
                      {
                        "kind": "text",
                        "text": " or "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Clerk.client.signUp.authenticateWithRedirect"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4317,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 795,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4317,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 796,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4317,
                              "character": 28
                            }
                          ],
                          "parameters": [
                            {
                              "id": 797,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "HandleOAuthCallbackParams"
                                },
                                "name": "HandleOAuthCallbackParams",
                                "package": "@clerk/types"
                              }
                            },
                            {
                              "id": 798,
                              "name": "customNavigate",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 799,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "types/dist/index.d.ts",
                                      "line": 4317,
                                      "character": 108
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 800,
                                      "name": "__type",
                                      "variant": "signature",
                                      "kind": 4096,
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "types/dist/index.d.ts",
                                          "line": 4317,
                                          "character": 108
                                        }
                                      ],
                                      "parameters": [
                                        {
                                          "id": 801,
                                          "name": "to",
                                          "variant": "param",
                                          "kind": 32768,
                                          "flags": {},
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "Promise"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "unknown"
                                          }
                                        ],
                                        "name": "Promise",
                                        "package": "typescript"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1088,
                    "name": "HeadlessBrowserClerk.handleRedirectCallback"
                  }
                },
                {
                  "id": 802,
                  "name": "handleUnauthenticated",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Handles a 401 response from Frontend API by refreshing the client and session object accordingly"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4349,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 803,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4349,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 804,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4349,
                              "character": 27
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1096,
                    "name": "HeadlessBrowserClerk.handleUnauthenticated"
                  }
                },
                {
                  "id": 805,
                  "name": "instanceType",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk Instance type is defined from the Publishable key"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3975,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "InstanceType"
                        },
                        "name": "InstanceType",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1099,
                    "name": "HeadlessBrowserClerk.instanceType"
                  }
                },
                {
                  "id": 806,
                  "name": "isSatellite",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk Flag for satellite apps."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3973,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1100,
                    "name": "HeadlessBrowserClerk.isSatellite"
                  }
                },
                {
                  "id": 807,
                  "name": "isStandardBrowser",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk flag for loading Clerk in a standard browser setup"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3977,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1101,
                    "name": "HeadlessBrowserClerk.isStandardBrowser"
                  }
                },
                {
                  "id": 808,
                  "name": "joinWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4350,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 809,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4350,
                          "character": 18
                        }
                      ],
                      "signatures": [
                        {
                          "id": 810,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4350,
                              "character": 18
                            }
                          ],
                          "parameters": [
                            {
                              "id": 811,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "JoinWaitlistParams"
                                },
                                "name": "JoinWaitlistParams",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "WaitlistResource"
                                },
                                "name": "WaitlistResource",
                                "package": "@clerk/types"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1102,
                    "name": "HeadlessBrowserClerk.joinWaitlist"
                  }
                },
                {
                  "id": 812,
                  "name": "load",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "astro/src/types.ts",
                      "line": 32,
                      "character": 2,
                      "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L32"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 813,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 32,
                          "character": 8,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L32"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 814,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 32,
                              "character": 8,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L32"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 815,
                              "name": "opts",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "Without"
                                },
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/types/src/index.ts",
                                      "qualifiedName": "ClerkOptions"
                                    },
                                    "name": "ClerkOptions",
                                    "package": "@clerk/types"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "isSatellite"
                                  }
                                ],
                                "name": "Without",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1106,
                    "name": "HeadlessBrowserClerk.load"
                  }
                },
                {
                  "id": 816,
                  "name": "loaded",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "If true the bootstrapping of Clerk.load() has completed successfully."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3963,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1110,
                    "name": "HeadlessBrowserClerk.loaded"
                  }
                },
                {
                  "id": 817,
                  "name": "mountCreateOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount a CreateOrganization component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4141,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 818,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4141,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 819,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4141,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 820,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the CreateOrganization component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 821,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "CreateOrganizationProps"
                                },
                                "name": "CreateOrganizationProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1111,
                    "name": "HeadlessBrowserClerk.mountCreateOrganization"
                  }
                },
                {
                  "id": 822,
                  "name": "mountOrganizationList",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount an organization list component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4170,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 823,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4170,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 824,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4170,
                              "character": 27
                            }
                          ],
                          "parameters": [
                            {
                              "id": 825,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the OrganizationList component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 826,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationListProps"
                                },
                                "name": "OrganizationListProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1116,
                    "name": "HeadlessBrowserClerk.mountOrganizationList"
                  }
                },
                {
                  "id": 827,
                  "name": "mountOrganizationProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount an organization profile component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4130,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 828,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4130,
                          "character": 30
                        }
                      ],
                      "signatures": [
                        {
                          "id": 829,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4130,
                              "character": 30
                            }
                          ],
                          "parameters": [
                            {
                              "id": 830,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the OrganizationProfile component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 831,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationProfileProps"
                                },
                                "name": "OrganizationProfileProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1121,
                    "name": "HeadlessBrowserClerk.mountOrganizationProfile"
                  }
                },
                {
                  "id": 832,
                  "name": "mountOrganizationSwitcher",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount an organization switcher component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4152,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 833,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4152,
                          "character": 31
                        }
                      ],
                      "signatures": [
                        {
                          "id": 834,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4152,
                              "character": 31
                            }
                          ],
                          "parameters": [
                            {
                              "id": 835,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the OrganizationSwitcher component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 836,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationSwitcherProps"
                                },
                                "name": "OrganizationSwitcherProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1126,
                    "name": "HeadlessBrowserClerk.mountOrganizationSwitcher"
                  }
                },
                {
                  "id": 837,
                  "name": "mountSignIn",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mounts a sign in flow component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4075,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 838,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4075,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 839,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4075,
                              "character": 17
                            }
                          ],
                          "parameters": [
                            {
                              "id": 840,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to mount the SignIn component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 841,
                              "name": "signInProps",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "sign in configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "SignInProps"
                                },
                                "name": "SignInProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1131,
                    "name": "HeadlessBrowserClerk.mountSignIn"
                  }
                },
                {
                  "id": 842,
                  "name": "mountSignUp",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mounts a sign up flow component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4089,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 843,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4089,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 844,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4089,
                              "character": 17
                            }
                          ],
                          "parameters": [
                            {
                              "id": 845,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to mount the SignUp component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 846,
                              "name": "signUpProps",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "sign up configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "SignUpProps"
                                },
                                "name": "SignUpProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1136,
                    "name": "HeadlessBrowserClerk.mountSignUp"
                  }
                },
                {
                  "id": 847,
                  "name": "mountUserButton",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount a user button component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4103,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 848,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4103,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 849,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4103,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 850,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to mount the UserButton component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 851,
                              "name": "userButtonProps",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "User button configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "UserButtonProps"
                                },
                                "name": "UserButtonProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1141,
                    "name": "HeadlessBrowserClerk.mountUserButton"
                  }
                },
                {
                  "id": 852,
                  "name": "mountUserProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount a user profile component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4117,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 853,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4117,
                          "character": 22
                        }
                      ],
                      "signatures": [
                        {
                          "id": 854,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4117,
                              "character": 22
                            }
                          ],
                          "parameters": [
                            {
                              "id": 855,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the UserProfile component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 856,
                              "name": "userProfileProps",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "User profile configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "UserProfileProps"
                                },
                                "name": "UserProfileProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1146,
                    "name": "HeadlessBrowserClerk.mountUserProfile"
                  }
                },
                {
                  "id": 857,
                  "name": "mountWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount a waitlist at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4181,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 858,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4181,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 859,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4181,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 860,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the Waitlist component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 861,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "WaitlistProps"
                                },
                                "name": "WaitlistProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1151,
                    "name": "HeadlessBrowserClerk.mountWaitlist"
                  }
                },
                {
                  "id": 862,
                  "name": "navigate",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Function used to commit a navigation after certain steps in the Clerk processes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4210,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/types/src/index.ts",
                      "qualifiedName": "CustomNavigation"
                    },
                    "name": "CustomNavigation",
                    "package": "@clerk/types"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1156,
                    "name": "HeadlessBrowserClerk.navigate"
                  }
                },
                {
                  "id": 863,
                  "name": "onComponentsReady",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "astro/src/types.ts",
                      "line": 38,
                      "character": 2,
                      "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L38"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                },
                {
                  "id": 864,
                  "name": "openCreateOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk CreateOrganization modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4056,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 865,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4056,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 866,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4056,
                              "character": 28
                            }
                          ],
                          "parameters": [
                            {
                              "id": 867,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the CreateOrganization component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "CreateOrganizationProps"
                                },
                                "name": "CreateOrganizationProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1157,
                    "name": "HeadlessBrowserClerk.openCreateOrganization"
                  }
                },
                {
                  "id": 868,
                  "name": "openGoogleOneTap",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Google One Tap component."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4019,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 869,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4019,
                          "character": 22
                        }
                      ],
                      "signatures": [
                        {
                          "id": 870,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4019,
                              "character": 22
                            }
                          ],
                          "parameters": [
                            {
                              "id": 871,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the GoogleOneTap component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "GoogleOneTapProps"
                                },
                                "name": "GoogleOneTapProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1161,
                    "name": "HeadlessBrowserClerk.openGoogleOneTap"
                  }
                },
                {
                  "id": 872,
                  "name": "openOrganizationProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk OrganizationProfile modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4047,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 873,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4047,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 874,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4047,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 875,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the OrganizationProfile component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationProfileProps"
                                },
                                "name": "OrganizationProfileProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1165,
                    "name": "HeadlessBrowserClerk.openOrganizationProfile"
                  }
                },
                {
                  "id": 876,
                  "name": "openSignIn",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk SignIn component in a modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3999,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 877,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 3999,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 878,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 3999,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 879,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional sign in configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "SignInProps"
                                },
                                "name": "SignInProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1169,
                    "name": "HeadlessBrowserClerk.openSignIn"
                  }
                },
                {
                  "id": 880,
                  "name": "openSignUp",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk SignUp component in a modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4029,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 881,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4029,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 882,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4029,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 883,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the SignUp component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "SignUpProps"
                                },
                                "name": "SignUpProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1173,
                    "name": "HeadlessBrowserClerk.openSignUp"
                  }
                },
                {
                  "id": 884,
                  "name": "openUserProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk UserProfile modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4038,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 885,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4038,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 886,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4038,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 887,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the UserProfile component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "UserProfileProps"
                                },
                                "name": "UserProfileProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1177,
                    "name": "HeadlessBrowserClerk.openUserProfile"
                  }
                },
                {
                  "id": 888,
                  "name": "openWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk Waitlist modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4065,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 889,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4065,
                          "character": 18
                        }
                      ],
                      "signatures": [
                        {
                          "id": 890,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4065,
                              "character": 18
                            }
                          ],
                          "parameters": [
                            {
                              "id": 891,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the Waitlist component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "WaitlistProps"
                                },
                                "name": "WaitlistProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1181,
                    "name": "HeadlessBrowserClerk.openWaitlist"
                  }
                },
                {
                  "id": 892,
                  "name": "organization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Active Organization"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3983,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "OrganizationResource"
                        },
                        "name": "OrganizationResource",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1185,
                    "name": "HeadlessBrowserClerk.organization"
                  }
                },
                {
                  "id": 893,
                  "name": "proxyUrl",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk Proxy url string."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3969,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1186,
                    "name": "HeadlessBrowserClerk.proxyUrl"
                  }
                },
                {
                  "id": 894,
                  "name": "publishableKey",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk Publishable Key string."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3967,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1187,
                    "name": "HeadlessBrowserClerk.publishableKey"
                  }
                },
                {
                  "id": 895,
                  "name": "redirectToAfterSignIn",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured afterSignIn URL."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4295,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 896,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4295,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 897,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4295,
                              "character": 27
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1188,
                    "name": "HeadlessBrowserClerk.redirectToAfterSignIn"
                  }
                },
                {
                  "id": 898,
                  "name": "redirectToAfterSignOut",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured afterSignOut URL."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4303,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 899,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4303,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 900,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4303,
                              "character": 28
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1191,
                    "name": "HeadlessBrowserClerk.redirectToAfterSignOut"
                  }
                },
                {
                  "id": 901,
                  "name": "redirectToAfterSignUp",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured afterSignUp URL."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4299,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 902,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4299,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 903,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4299,
                              "character": 27
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1194,
                    "name": "HeadlessBrowserClerk.redirectToAfterSignUp"
                  }
                },
                {
                  "id": 904,
                  "name": "redirectToCreateOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured URL where <CreateOrganization /> is mounted."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4291,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 905,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4291,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 906,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4291,
                              "character": 34
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1197,
                    "name": "HeadlessBrowserClerk.redirectToCreateOrganization"
                  }
                },
                {
                  "id": 907,
                  "name": "redirectToOrganizationProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured URL where <OrganizationProfile /> is mounted."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4287,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 908,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4287,
                          "character": 35
                        }
                      ],
                      "signatures": [
                        {
                          "id": 909,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4287,
                              "character": 35
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1200,
                    "name": "HeadlessBrowserClerk.redirectToOrganizationProfile"
                  }
                },
                {
                  "id": 910,
                  "name": "redirectToSignIn",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4273,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 911,
                      "name": "redirectToSignIn",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Redirects to the configured URL where <SignIn/> is mounted."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4273,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 912,
                          "name": "opts",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "A "
                              },
                              {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "RedirectOptions",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "RedirectOptions"
                                }
                              },
                              {
                                "kind": "text",
                                "text": " object"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "SignInRedirectOptions"
                            },
                            "name": "SignInRedirectOptions",
                            "package": "@clerk/types"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1204,
                        "name": "HeadlessBrowserClerk.redirectToSignIn"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1203,
                    "name": "HeadlessBrowserClerk.redirectToSignIn"
                  }
                },
                {
                  "id": 913,
                  "name": "redirectToSignUp",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4279,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 914,
                      "name": "redirectToSignUp",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Redirects to the configured URL where <SignUp/> is mounted."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4279,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 915,
                          "name": "opts",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "A "
                              },
                              {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "RedirectOptions",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "RedirectOptions"
                                }
                              },
                              {
                                "kind": "text",
                                "text": " object"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "SignUpRedirectOptions"
                            },
                            "name": "SignUpRedirectOptions",
                            "package": "@clerk/types"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1207,
                        "name": "HeadlessBrowserClerk.redirectToSignUp"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1206,
                    "name": "HeadlessBrowserClerk.redirectToSignUp"
                  }
                },
                {
                  "id": 916,
                  "name": "redirectToUserProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured URL where <UserProfile/> is mounted."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4283,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 917,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4283,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 918,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4283,
                              "character": 27
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1209,
                    "name": "HeadlessBrowserClerk.redirectToUserProfile"
                  }
                },
                {
                  "id": 919,
                  "name": "redirectToWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured URL where <Waitlist/> is mounted."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4307,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 920,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4307,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 921,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4307,
                              "character": 24
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1212,
                    "name": "HeadlessBrowserClerk.redirectToWaitlist"
                  }
                },
                {
                  "id": 922,
                  "name": "redirectWithAuth",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4267,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 923,
                      "name": "redirectWithAuth",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Redirects to the provided url after decorating it with the auth token for development instances."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4267,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 924,
                          "name": "to",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": 1216,
                        "name": "HeadlessBrowserClerk.redirectWithAuth"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1215,
                    "name": "HeadlessBrowserClerk.redirectWithAuth"
                  }
                },
                {
                  "id": 925,
                  "name": "sdkMetadata",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "If present, contains information about the SDK that the host application is using.\nFor example, if Clerk is loaded through "
                      },
                      {
                        "kind": "code",
                        "text": "`@clerk/nextjs`"
                      },
                      {
                        "kind": "text",
                        "text": ", this would be "
                      },
                      {
                        "kind": "code",
                        "text": "`{ name: '@clerk/nextjs', version: '1.0.0' }`"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3959,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "SDKMetadata"
                        },
                        "name": "SDKMetadata",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1218,
                    "name": "HeadlessBrowserClerk.sdkMetadata"
                  }
                },
                {
                  "id": 926,
                  "name": "session",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Active Session."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3981,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "ActiveSessionResource"
                        },
                        "name": "ActiveSessionResource",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1219,
                    "name": "HeadlessBrowserClerk.session"
                  }
                },
                {
                  "id": 927,
                  "name": "setActive",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Set the active session and organization explicitly.\n\nIf the session param is "
                      },
                      {
                        "kind": "code",
                        "text": "`null`"
                      },
                      {
                        "kind": "text",
                        "text": ", the active session is deleted.\nIn a similar fashion, if the organization param is "
                      },
                      {
                        "kind": "code",
                        "text": "`null`"
                      },
                      {
                        "kind": "text",
                        "text": ", the current organization is removed as active."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4206,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/types/src/index.ts",
                      "qualifiedName": "SetActive"
                    },
                    "name": "SetActive",
                    "package": "@clerk/types"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1220,
                    "name": "HeadlessBrowserClerk.setActive"
                  }
                },
                {
                  "id": 928,
                  "name": "signOut",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Signs out the current user on single-session instances, or all users on multi-session instances"
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@param",
                        "name": "signOutCallback",
                        "content": [
                          {
                            "kind": "text",
                            "text": "Optional A callback that runs after sign out completes."
                          }
                        ]
                      },
                      {
                        "tag": "@param",
                        "name": "options",
                        "content": [
                          {
                            "kind": "text",
                            "text": "Optional Configuration options, see "
                          },
                          {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "SignOutOptions",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "SignOutOptions"
                            }
                          }
                        ]
                      },
                      {
                        "tag": "@returns",
                        "content": [
                          {
                            "kind": "text",
                            "text": "A promise that resolves when the sign out process completes."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3994,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/types/src/index.ts",
                      "qualifiedName": "SignOut"
                    },
                    "name": "SignOut",
                    "package": "@clerk/types"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1221,
                    "name": "HeadlessBrowserClerk.signOut"
                  }
                },
                {
                  "id": 929,
                  "name": "telemetry",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3986,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "TelemetryCollector"
                        },
                        "name": "TelemetryCollector",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1222,
                    "name": "HeadlessBrowserClerk.telemetry"
                  }
                },
                {
                  "id": 930,
                  "name": "unmountCreateOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount the CreateOrganization component from the target node."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4146,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 931,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4146,
                          "character": 31
                        }
                      ],
                      "signatures": [
                        {
                          "id": 932,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4146,
                              "character": 31
                            }
                          ],
                          "parameters": [
                            {
                              "id": 933,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the CreateOrganization component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1223,
                    "name": "HeadlessBrowserClerk.unmountCreateOrganization"
                  }
                },
                {
                  "id": 934,
                  "name": "unmountOrganizationList",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount the organization list component from the target node.*"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4175,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 935,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4175,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 936,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4175,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 937,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the OrganizationList component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1227,
                    "name": "HeadlessBrowserClerk.unmountOrganizationList"
                  }
                },
                {
                  "id": 938,
                  "name": "unmountOrganizationProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount the organization profile component from the target node."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4135,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 939,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4135,
                          "character": 32
                        }
                      ],
                      "signatures": [
                        {
                          "id": 940,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4135,
                              "character": 32
                            }
                          ],
                          "parameters": [
                            {
                              "id": 941,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the OrganizationProfile component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1231,
                    "name": "HeadlessBrowserClerk.unmountOrganizationProfile"
                  }
                },
                {
                  "id": 942,
                  "name": "unmountOrganizationSwitcher",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount the organization profile component from the target node.*"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4157,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 943,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4157,
                          "character": 33
                        }
                      ],
                      "signatures": [
                        {
                          "id": 944,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4157,
                              "character": 33
                            }
                          ],
                          "parameters": [
                            {
                              "id": 945,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the OrganizationSwitcher component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1235,
                    "name": "HeadlessBrowserClerk.unmountOrganizationSwitcher"
                  }
                },
                {
                  "id": 946,
                  "name": "unmountSignIn",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount a sign in flow component from the target element.\nIf there is no component mounted at the target node, results in a noop."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4082,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 947,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4082,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 948,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4082,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 949,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the SignIn component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1239,
                    "name": "HeadlessBrowserClerk.unmountSignIn"
                  }
                },
                {
                  "id": 950,
                  "name": "unmountSignUp",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount a sign up flow component from the target element.\nIf there is no component mounted at the target node, results in a noop."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4096,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 951,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4096,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 952,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4096,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 953,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the SignUp component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1243,
                    "name": "HeadlessBrowserClerk.unmountSignUp"
                  }
                },
                {
                  "id": 954,
                  "name": "unmountUserButton",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount a user button component at the target element.\nIf there is no component mounted at the target node, results in a noop."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4110,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 955,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4110,
                          "character": 23
                        }
                      ],
                      "signatures": [
                        {
                          "id": 956,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4110,
                              "character": 23
                            }
                          ],
                          "parameters": [
                            {
                              "id": 957,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the UserButton component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1247,
                    "name": "HeadlessBrowserClerk.unmountUserButton"
                  }
                },
                {
                  "id": 958,
                  "name": "unmountUserProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount a user profile component at the target element.\nIf there is no component mounted at the target node, results in a noop."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4124,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 959,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4124,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 960,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4124,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 961,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the UserProfile component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1251,
                    "name": "HeadlessBrowserClerk.unmountUserProfile"
                  }
                },
                {
                  "id": 962,
                  "name": "unmountWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount the Waitlist component from the target node."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4186,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 963,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4186,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 964,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4186,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 965,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the Waitlist component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1255,
                    "name": "HeadlessBrowserClerk.unmountWaitlist"
                  }
                },
                {
                  "id": 966,
                  "name": "updateClient",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "astro/src/types.ts",
                      "line": 33,
                      "character": 2,
                      "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L33"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 967,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 33,
                          "character": 16,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L33"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 968,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 33,
                              "character": 16,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L33"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 969,
                              "name": "client",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "ClientResource"
                                },
                                "name": "ClientResource",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1259,
                    "name": "HeadlessBrowserClerk.updateClient"
                  }
                },
                {
                  "id": 970,
                  "name": "user",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Current User."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3985,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "UserResource"
                        },
                        "name": "UserResource",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1263,
                    "name": "HeadlessBrowserClerk.user"
                  }
                },
                {
                  "id": 971,
                  "name": "version",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk SDK version number."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3954,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1264,
                    "name": "HeadlessBrowserClerk.version"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    684, 687, 691, 694, 699, 703, 707, 711, 715, 744, 745, 748, 751, 754, 757, 760, 763, 766, 767, 771,
                    772, 773, 777, 785, 794, 802, 805, 806, 807, 808, 812, 816, 817, 822, 827, 832, 837, 842, 847, 852,
                    857, 862, 863, 864, 868, 872, 876, 880, 884, 888, 892, 893, 894, 895, 898, 901, 904, 907, 916, 919,
                    925, 926, 927, 928, 929, 930, 934, 938, 942, 946, 950, 954, 958, 962, 966, 970, 971
                  ]
                },
                {
                  "title": "Methods",
                  "children": [695, 719, 721, 723, 725, 727, 729, 731, 734, 737, 740, 742, 910, 913, 922]
                }
              ],
              "sources": [
                {
                  "fileName": "astro/src/types.ts",
                  "line": 37,
                  "character": 17,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L37"
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "target": 978,
                  "name": "HeadlessBrowserClerk",
                  "package": "@clerk/astro"
                }
              ]
            },
            {
              "id": 972,
              "name": "ButtonProps",
              "variant": "declaration",
              "kind": 2097152,
              "flags": {},
              "sources": [
                {
                  "fileName": "astro/src/types.ts",
                  "line": 74,
                  "character": 12,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L74"
                }
              ],
              "typeParameters": [
                {
                  "id": 973,
                  "name": "Tag",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {}
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 974,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 975,
                      "name": "as",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "comment": {
                        "summary": [],
                        "blockTags": [
                          {
                            "tag": "@deprecated",
                            "content": [
                              {
                                "kind": "text",
                                "text": "The 'as' prop is deprecated and will be removed in a future version.\nUse the default slot with the 'asChild' prop instead."
                              }
                            ]
                          },
                          {
                            "tag": "@example",
                            "content": [
                              {
                                "kind": "code",
                                "text": "```ts\n<SignInButton asChild>\n  <button>Sign in</button>\n</SignInButton>\n```"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 83,
                          "character": 2,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L83"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 973,
                        "name": "Tag",
                        "package": "@clerk/astro",
                        "refersToTypeParameter": true
                      }
                    },
                    {
                      "id": 976,
                      "name": "asChild",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 84,
                          "character": 2,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L84"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 977,
                      "name": "mode",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 85,
                          "character": 2,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L85"
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "redirect"
                          },
                          {
                            "type": "literal",
                            "value": "modal"
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [975, 976, 977]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "astro/src/types.ts",
                      "line": 74,
                      "character": 31,
                      "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L74"
                    }
                  ]
                }
              }
            },
            {
              "id": 978,
              "name": "HeadlessBrowserClerk",
              "variant": "declaration",
              "kind": 256,
              "flags": {},
              "children": [
                {
                  "id": 979,
                  "name": "__experimental_closeUserVerification",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk user verification modal."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@experimantal",
                        "content": [
                          {
                            "kind": "text",
                            "text": "This API is still under active development and may change at any moment."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4014,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 980,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4014,
                          "character": 42
                        }
                      ],
                      "signatures": [
                        {
                          "id": 981,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4014,
                              "character": 42
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.__experimental_closeUserVerification"
                  }
                },
                {
                  "id": 982,
                  "name": "__experimental_openUserVerification",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk UserVerification component in a modal."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@experimantal",
                        "content": [
                          {
                            "kind": "text",
                            "text": "This API is still under active development and may change at any moment."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4009,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 983,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4009,
                          "character": 41
                        }
                      ],
                      "signatures": [
                        {
                          "id": 984,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4009,
                              "character": 41
                            }
                          ],
                          "parameters": [
                            {
                              "id": 985,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional user verification configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "__experimental_UserVerificationModalProps"
                                },
                                "name": "__experimental_UserVerificationModalProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.__experimental_openUserVerification"
                  }
                },
                {
                  "id": 986,
                  "name": "__experimental_prefetchOrganizationSwitcher",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Prefetches the data displayed by an organization switcher.\nIt can be used when "
                      },
                      {
                        "kind": "code",
                        "text": "`mountOrganizationSwitcher({ asStandalone: true})`"
                      },
                      {
                        "kind": "text",
                        "text": ", to avoid unwanted loading states."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@experimantal",
                        "content": [
                          {
                            "kind": "text",
                            "text": "This API is still under active development and may change at any moment."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4164,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 987,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4164,
                          "character": 49
                        }
                      ],
                      "signatures": [
                        {
                          "id": 988,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4164,
                              "character": 49
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.__experimental_prefetchOrganizationSwitcher"
                  }
                },
                {
                  "id": 989,
                  "name": "__internal_country",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true,
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3987,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.__internal_country"
                  }
                },
                {
                  "id": 990,
                  "name": "__internal_getOption",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3964,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 991,
                      "name": "__internal_getOption",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 3964,
                          "character": 4
                        }
                      ],
                      "typeParameters": [
                        {
                          "id": 992,
                          "name": "K",
                          "variant": "typeParam",
                          "kind": 131072,
                          "flags": {},
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": "appearance"
                              },
                              {
                                "type": "literal",
                                "value": "localization"
                              },
                              {
                                "type": "literal",
                                "value": "routerPush"
                              },
                              {
                                "type": "literal",
                                "value": "routerReplace"
                              },
                              {
                                "type": "literal",
                                "value": "routerDebug"
                              },
                              {
                                "type": "literal",
                                "value": "signInForceRedirectUrl"
                              },
                              {
                                "type": "literal",
                                "value": "signInFallbackRedirectUrl"
                              },
                              {
                                "type": "literal",
                                "value": "signUpForceRedirectUrl"
                              },
                              {
                                "type": "literal",
                                "value": "signUpFallbackRedirectUrl"
                              },
                              {
                                "type": "unknown",
                                "name": "keyof LegacyRedirectProps"
                              },
                              {
                                "type": "literal",
                                "value": "afterSignOutUrl"
                              },
                              {
                                "type": "literal",
                                "value": "afterMultiSessionSingleSignOutUrl"
                              },
                              {
                                "type": "literal",
                                "value": "polling"
                              },
                              {
                                "type": "literal",
                                "value": "selectInitialSession"
                              },
                              {
                                "type": "literal",
                                "value": "standardBrowser"
                              },
                              {
                                "type": "literal",
                                "value": "supportEmail"
                              },
                              {
                                "type": "literal",
                                "value": "touchSession"
                              },
                              {
                                "type": "literal",
                                "value": "signInUrl"
                              },
                              {
                                "type": "literal",
                                "value": "signUpUrl"
                              },
                              {
                                "type": "literal",
                                "value": "allowedRedirectOrigins"
                              },
                              {
                                "type": "literal",
                                "value": "isSatellite"
                              },
                              {
                                "type": "literal",
                                "value": "telemetry"
                              },
                              {
                                "type": "literal",
                                "value": "sdkMetadata"
                              },
                              {
                                "type": "literal",
                                "value": "waitlistUrl"
                              },
                              {
                                "type": "literal",
                                "value": "experimental"
                              },
                              {
                                "type": "literal",
                                "value": "__experimental_router"
                              }
                            ]
                          }
                        }
                      ],
                      "parameters": [
                        {
                          "id": 993,
                          "name": "key",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": 992,
                            "name": "K",
                            "package": "@clerk/types",
                            "refersToTypeParameter": true
                          }
                        }
                      ],
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "target": 992,
                          "name": "K",
                          "package": "@clerk/types",
                          "refersToTypeParameter": true
                        },
                        "objectType": {
                          "type": "reference",
                          "target": {
                            "sourceFileName": "packages/types/src/index.ts",
                            "qualifiedName": "ClerkOptions"
                          },
                          "name": "ClerkOptions",
                          "package": "@clerk/types"
                        }
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.__internal_getOption"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.__internal_getOption"
                  }
                },
                {
                  "id": 994,
                  "name": "addListener",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Register a listener that triggers a callback each time important Clerk resources are changed.\nAllows to hook up at different steps in the sign up, sign in processes.\n\nSome important checkpoints:\n   When there is an active session, user === session.user.\n   When there is no active session, user and session will both be null.\n   When a session is loading, user and session will be undefined."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4199,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 995,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4199,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 996,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "comment": {
                            "summary": [],
                            "blockTags": [
                              {
                                "tag": "@returns",
                                "content": [
                                  {
                                    "kind": "text",
                                    "text": "- Unsubscribe callback"
                                  }
                                ]
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4199,
                              "character": 17
                            }
                          ],
                          "parameters": [
                            {
                              "id": 997,
                              "name": "callback",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Callback function receiving the most updated Clerk resources after a change."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "ListenerCallback"
                                },
                                "name": "ListenerCallback",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "UnsubscribeCallback"
                            },
                            "name": "UnsubscribeCallback",
                            "package": "@clerk/types"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.addListener"
                  }
                },
                {
                  "id": 998,
                  "name": "authenticateWithCoinbaseWallet",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Authenticates user using their Coinbase Smart Wallet and browser extension"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4329,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 999,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4329,
                          "character": 36
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1000,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4329,
                              "character": 36
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1001,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "AuthenticateWithCoinbaseWalletParams"
                                },
                                "name": "AuthenticateWithCoinbaseWalletParams",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.authenticateWithCoinbaseWallet"
                  }
                },
                {
                  "id": 1002,
                  "name": "authenticateWithGoogleOneTap",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Authenticates user using a Google token generated from Google identity services."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4337,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1003,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4337,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1004,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4337,
                              "character": 34
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1005,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "AuthenticateWithGoogleOneTapParams"
                                },
                                "name": "AuthenticateWithGoogleOneTapParams",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/types/src/index.ts",
                                      "qualifiedName": "SignInResource"
                                    },
                                    "name": "SignInResource",
                                    "package": "@clerk/types"
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/types/src/index.ts",
                                      "qualifiedName": "SignUpResource"
                                    },
                                    "name": "SignUpResource",
                                    "package": "@clerk/types"
                                  }
                                ]
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.authenticateWithGoogleOneTap"
                  }
                },
                {
                  "id": 1006,
                  "name": "authenticateWithMetamask",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Authenticates user using their Metamask browser extension"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4325,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1007,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4325,
                          "character": 30
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1008,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4325,
                              "character": 30
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1009,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "AuthenticateWithMetamaskParams"
                                },
                                "name": "AuthenticateWithMetamaskParams",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.authenticateWithMetamask"
                  }
                },
                {
                  "id": 1010,
                  "name": "authenticateWithWeb3",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Authenticates user using their Web3 Wallet browser extension"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4333,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1011,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4333,
                          "character": 26
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1012,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4333,
                              "character": 26
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1013,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "ClerkAuthenticateWithWeb3Params"
                                },
                                "name": "ClerkAuthenticateWithWeb3Params",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.authenticateWithWeb3"
                  }
                },
                {
                  "id": 1014,
                  "name": "buildAfterMultiSessionSingleSignOutUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4256,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1015,
                      "name": "buildAfterMultiSessionSingleSignOutUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured afterMultiSessionSingleSignOutUrl of the instance."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4256,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildAfterMultiSessionSingleSignOutUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildAfterMultiSessionSingleSignOutUrl"
                  }
                },
                {
                  "id": 1016,
                  "name": "buildAfterSignInUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4244,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1017,
                      "name": "buildAfterSignInUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured afterSignInUrl of the instance."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4244,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildAfterSignInUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildAfterSignInUrl"
                  }
                },
                {
                  "id": 1018,
                  "name": "buildAfterSignOutUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4252,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1019,
                      "name": "buildAfterSignOutUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured afterSignOutUrl of the instance."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4252,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildAfterSignOutUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildAfterSignOutUrl"
                  }
                },
                {
                  "id": 1020,
                  "name": "buildAfterSignUpUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4248,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1021,
                      "name": "buildAfterSignUpUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured afterSignInUrl of the instance."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4248,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildAfterSignUpUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildAfterSignUpUrl"
                  }
                },
                {
                  "id": 1022,
                  "name": "buildCreateOrganizationUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4236,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1023,
                      "name": "buildCreateOrganizationUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured url where <CreateOrganization /> is mounted or a custom create-organization page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4236,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildCreateOrganizationUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildCreateOrganizationUrl"
                  }
                },
                {
                  "id": 1024,
                  "name": "buildOrganizationProfileUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4240,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1025,
                      "name": "buildOrganizationProfileUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured url where <OrganizationProfile /> is mounted or a custom organization-profile page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4240,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildOrganizationProfileUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildOrganizationProfileUrl"
                  }
                },
                {
                  "id": 1026,
                  "name": "buildSignInUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4222,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1027,
                      "name": "buildSignInUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured url where <SignIn/> is mounted or a custom sign-in page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4222,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1028,
                          "name": "opts",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "A "
                              },
                              {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "RedirectOptions",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "RedirectOptions"
                                }
                              },
                              {
                                "kind": "text",
                                "text": " object"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "RedirectOptions"
                            },
                            "name": "RedirectOptions",
                            "package": "@clerk/types"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildSignInUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildSignInUrl"
                  }
                },
                {
                  "id": 1029,
                  "name": "buildSignUpUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4228,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1030,
                      "name": "buildSignUpUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured url where <SignUp/> is mounted or a custom sign-up page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4228,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1031,
                          "name": "opts",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "A "
                              },
                              {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "RedirectOptions",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "RedirectOptions"
                                }
                              },
                              {
                                "kind": "text",
                                "text": " object"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "RedirectOptions"
                            },
                            "name": "RedirectOptions",
                            "package": "@clerk/types"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildSignUpUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildSignUpUrl"
                  }
                },
                {
                  "id": 1032,
                  "name": "buildUrlWithAuth",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4216,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1033,
                      "name": "buildUrlWithAuth",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Decorates the provided url with the auth token for development instances."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4216,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1034,
                          "name": "to",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildUrlWithAuth"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildUrlWithAuth"
                  }
                },
                {
                  "id": 1035,
                  "name": "buildUserProfileUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4232,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1036,
                      "name": "buildUserProfileUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the url where <UserProfile /> is mounted or a custom user-profile page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4232,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildUserProfileUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildUserProfileUrl"
                  }
                },
                {
                  "id": 1037,
                  "name": "buildWaitlistUrl",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4260,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1038,
                      "name": "buildWaitlistUrl",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns the configured url where <Waitlist/> is mounted or a custom waitlist page is rendered."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4260,
                          "character": 4
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.buildWaitlistUrl"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.buildWaitlistUrl"
                  }
                },
                {
                  "id": 1039,
                  "name": "client",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Client handling most Clerk operations."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3979,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "ClientResource"
                        },
                        "name": "ClientResource",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.client"
                  }
                },
                {
                  "id": 1040,
                  "name": "closeCreateOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk CreateOrganization modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4060,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1041,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4060,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1042,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4060,
                              "character": 29
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.closeCreateOrganization"
                  }
                },
                {
                  "id": 1043,
                  "name": "closeGoogleOneTap",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Google One Tap component.\nIf the component is not already open, results in a noop."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4024,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1044,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4024,
                          "character": 23
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1045,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4024,
                              "character": 23
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.closeGoogleOneTap"
                  }
                },
                {
                  "id": 1046,
                  "name": "closeOrganizationProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk OrganizationProfile modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4051,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1047,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4051,
                          "character": 30
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1048,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4051,
                              "character": 30
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.closeOrganizationProfile"
                  }
                },
                {
                  "id": 1049,
                  "name": "closeSignIn",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk SignIn modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4003,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1050,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4003,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1051,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4003,
                              "character": 17
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.closeSignIn"
                  }
                },
                {
                  "id": 1052,
                  "name": "closeSignUp",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk SignUp modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4033,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1053,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4033,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1054,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4033,
                              "character": 17
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.closeSignUp"
                  }
                },
                {
                  "id": 1055,
                  "name": "closeUserProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk UserProfile modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4042,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1056,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4042,
                          "character": 22
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1057,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4042,
                              "character": 22
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.closeUserProfile"
                  }
                },
                {
                  "id": 1058,
                  "name": "closeWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Closes the Clerk Waitlist modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4069,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1059,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4069,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1060,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4069,
                              "character": 19
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.closeWaitlist"
                  }
                },
                {
                  "id": 1061,
                  "name": "createOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Creates an organization, adding the current user as admin."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4341,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1062,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4341,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1063,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4341,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1064,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "CreateOrganizationParams"
                                },
                                "name": "CreateOrganizationParams",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationResource"
                                },
                                "name": "OrganizationResource",
                                "package": "@clerk/types"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.createOrganization"
                  }
                },
                {
                  "id": 1065,
                  "name": "domain",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk Satellite Frontend API string."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3971,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.domain"
                  }
                },
                {
                  "id": 1066,
                  "name": "frontendApi",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3965,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.frontendApi"
                  }
                },
                {
                  "id": 1067,
                  "name": "getOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Retrieves a single organization by id."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4345,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1068,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4345,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1069,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4345,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1070,
                              "name": "organizationId",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationResource"
                                },
                                "name": "OrganizationResource",
                                "package": "@clerk/types"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.getOrganization"
                  }
                },
                {
                  "id": 1071,
                  "name": "handleEmailLinkVerification",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Completes a Email Link flow  started by "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Clerk.client.signIn.createEmailLinkFlow"
                      },
                      {
                        "kind": "text",
                        "text": " or "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Clerk.client.signUp.createEmailLinkFlow"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4321,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1072,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4321,
                          "character": 33
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1073,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4321,
                              "character": 33
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1074,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "HandleEmailLinkVerificationParams"
                                },
                                "name": "HandleEmailLinkVerificationParams",
                                "package": "@clerk/types"
                              }
                            },
                            {
                              "id": 1075,
                              "name": "customNavigate",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 1076,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "types/dist/index.d.ts",
                                      "line": 4321,
                                      "character": 94
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 1077,
                                      "name": "__type",
                                      "variant": "signature",
                                      "kind": 4096,
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "types/dist/index.d.ts",
                                          "line": 4321,
                                          "character": 94
                                        }
                                      ],
                                      "parameters": [
                                        {
                                          "id": 1078,
                                          "name": "to",
                                          "variant": "param",
                                          "kind": 32768,
                                          "flags": {},
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "Promise"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "unknown"
                                          }
                                        ],
                                        "name": "Promise",
                                        "package": "typescript"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.handleEmailLinkVerification"
                  }
                },
                {
                  "id": 1079,
                  "name": "handleGoogleOneTapCallback",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Completes a Google One Tap redirection flow started by\n"
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Clerk.authenticateWithGoogleOneTap",
                        "target": 1002
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4312,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1080,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4312,
                          "character": 32
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1081,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4312,
                              "character": 32
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1082,
                              "name": "signInOrUp",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/types/src/index.ts",
                                      "qualifiedName": "SignInResource"
                                    },
                                    "name": "SignInResource",
                                    "package": "@clerk/types"
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/types/src/index.ts",
                                      "qualifiedName": "SignUpResource"
                                    },
                                    "name": "SignUpResource",
                                    "package": "@clerk/types"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1083,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "HandleOAuthCallbackParams"
                                },
                                "name": "HandleOAuthCallbackParams",
                                "package": "@clerk/types"
                              }
                            },
                            {
                              "id": 1084,
                              "name": "customNavigate",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 1085,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "types/dist/index.d.ts",
                                      "line": 4312,
                                      "character": 130
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 1086,
                                      "name": "__type",
                                      "variant": "signature",
                                      "kind": 4096,
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "types/dist/index.d.ts",
                                          "line": 4312,
                                          "character": 130
                                        }
                                      ],
                                      "parameters": [
                                        {
                                          "id": 1087,
                                          "name": "to",
                                          "variant": "param",
                                          "kind": 32768,
                                          "flags": {},
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "Promise"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "unknown"
                                          }
                                        ],
                                        "name": "Promise",
                                        "package": "typescript"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.handleGoogleOneTapCallback"
                  }
                },
                {
                  "id": 1088,
                  "name": "handleRedirectCallback",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Completes an OAuth or SAML redirection flow started by\n"
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Clerk.client.signIn.authenticateWithRedirect"
                      },
                      {
                        "kind": "text",
                        "text": " or "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Clerk.client.signUp.authenticateWithRedirect"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4317,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1089,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4317,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1090,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4317,
                              "character": 28
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1091,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "HandleOAuthCallbackParams"
                                },
                                "name": "HandleOAuthCallbackParams",
                                "package": "@clerk/types"
                              }
                            },
                            {
                              "id": 1092,
                              "name": "customNavigate",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 1093,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "types/dist/index.d.ts",
                                      "line": 4317,
                                      "character": 108
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 1094,
                                      "name": "__type",
                                      "variant": "signature",
                                      "kind": 4096,
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "types/dist/index.d.ts",
                                          "line": 4317,
                                          "character": 108
                                        }
                                      ],
                                      "parameters": [
                                        {
                                          "id": 1095,
                                          "name": "to",
                                          "variant": "param",
                                          "kind": 32768,
                                          "flags": {},
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "Promise"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "intrinsic",
                                            "name": "unknown"
                                          }
                                        ],
                                        "name": "Promise",
                                        "package": "typescript"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.handleRedirectCallback"
                  }
                },
                {
                  "id": 1096,
                  "name": "handleUnauthenticated",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Handles a 401 response from Frontend API by refreshing the client and session object accordingly"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4349,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1097,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4349,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1098,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4349,
                              "character": 27
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.handleUnauthenticated"
                  }
                },
                {
                  "id": 1099,
                  "name": "instanceType",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk Instance type is defined from the Publishable key"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3975,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "InstanceType"
                        },
                        "name": "InstanceType",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.instanceType"
                  }
                },
                {
                  "id": 1100,
                  "name": "isSatellite",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk Flag for satellite apps."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3973,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.isSatellite"
                  }
                },
                {
                  "id": 1101,
                  "name": "isStandardBrowser",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk flag for loading Clerk in a standard browser setup"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3977,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.isStandardBrowser"
                  }
                },
                {
                  "id": 1102,
                  "name": "joinWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4350,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1103,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4350,
                          "character": 18
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1104,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4350,
                              "character": 18
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1105,
                              "name": "params",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "JoinWaitlistParams"
                                },
                                "name": "JoinWaitlistParams",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "WaitlistResource"
                                },
                                "name": "WaitlistResource",
                                "package": "@clerk/types"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.joinWaitlist"
                  }
                },
                {
                  "id": 1106,
                  "name": "load",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "astro/src/types.ts",
                      "line": 32,
                      "character": 2,
                      "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L32"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1107,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 32,
                          "character": 8,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L32"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1108,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 32,
                              "character": 8,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L32"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1109,
                              "name": "opts",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "Without"
                                },
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/types/src/index.ts",
                                      "qualifiedName": "ClerkOptions"
                                    },
                                    "name": "ClerkOptions",
                                    "package": "@clerk/types"
                                  },
                                  {
                                    "type": "literal",
                                    "value": "isSatellite"
                                  }
                                ],
                                "name": "Without",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1110,
                  "name": "loaded",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "If true the bootstrapping of Clerk.load() has completed successfully."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3963,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.loaded"
                  }
                },
                {
                  "id": 1111,
                  "name": "mountCreateOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount a CreateOrganization component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4141,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1112,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4141,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1113,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4141,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1114,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the CreateOrganization component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 1115,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "CreateOrganizationProps"
                                },
                                "name": "CreateOrganizationProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.mountCreateOrganization"
                  }
                },
                {
                  "id": 1116,
                  "name": "mountOrganizationList",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount an organization list component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4170,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1117,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4170,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1118,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4170,
                              "character": 27
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1119,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the OrganizationList component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 1120,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationListProps"
                                },
                                "name": "OrganizationListProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.mountOrganizationList"
                  }
                },
                {
                  "id": 1121,
                  "name": "mountOrganizationProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount an organization profile component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4130,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1122,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4130,
                          "character": 30
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1123,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4130,
                              "character": 30
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1124,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the OrganizationProfile component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 1125,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationProfileProps"
                                },
                                "name": "OrganizationProfileProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.mountOrganizationProfile"
                  }
                },
                {
                  "id": 1126,
                  "name": "mountOrganizationSwitcher",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount an organization switcher component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4152,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1127,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4152,
                          "character": 31
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1128,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4152,
                              "character": 31
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1129,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the OrganizationSwitcher component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 1130,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationSwitcherProps"
                                },
                                "name": "OrganizationSwitcherProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.mountOrganizationSwitcher"
                  }
                },
                {
                  "id": 1131,
                  "name": "mountSignIn",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mounts a sign in flow component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4075,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1132,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4075,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1133,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4075,
                              "character": 17
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1134,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to mount the SignIn component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 1135,
                              "name": "signInProps",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "sign in configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "SignInProps"
                                },
                                "name": "SignInProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.mountSignIn"
                  }
                },
                {
                  "id": 1136,
                  "name": "mountSignUp",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mounts a sign up flow component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4089,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1137,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4089,
                          "character": 17
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1138,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4089,
                              "character": 17
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1139,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to mount the SignUp component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 1140,
                              "name": "signUpProps",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "sign up configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "SignUpProps"
                                },
                                "name": "SignUpProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.mountSignUp"
                  }
                },
                {
                  "id": 1141,
                  "name": "mountUserButton",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount a user button component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4103,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1142,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4103,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1143,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4103,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1144,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to mount the UserButton component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 1145,
                              "name": "userButtonProps",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "User button configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "UserButtonProps"
                                },
                                "name": "UserButtonProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.mountUserButton"
                  }
                },
                {
                  "id": 1146,
                  "name": "mountUserProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount a user profile component at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4117,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1147,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4117,
                          "character": 22
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1148,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4117,
                              "character": 22
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1149,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the UserProfile component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 1150,
                              "name": "userProfileProps",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "User profile configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "UserProfileProps"
                                },
                                "name": "UserProfileProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.mountUserProfile"
                  }
                },
                {
                  "id": 1151,
                  "name": "mountWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Mount a waitlist at the target element."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4181,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1152,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4181,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1153,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4181,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1154,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target to mount the Waitlist component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            },
                            {
                              "id": 1155,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "WaitlistProps"
                                },
                                "name": "WaitlistProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.mountWaitlist"
                  }
                },
                {
                  "id": 1156,
                  "name": "navigate",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Function used to commit a navigation after certain steps in the Clerk processes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4210,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/types/src/index.ts",
                      "qualifiedName": "CustomNavigation"
                    },
                    "name": "CustomNavigation",
                    "package": "@clerk/types"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.navigate"
                  }
                },
                {
                  "id": 1157,
                  "name": "openCreateOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk CreateOrganization modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4056,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1158,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4056,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1159,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4056,
                              "character": 28
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1160,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the CreateOrganization component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "CreateOrganizationProps"
                                },
                                "name": "CreateOrganizationProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.openCreateOrganization"
                  }
                },
                {
                  "id": 1161,
                  "name": "openGoogleOneTap",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Google One Tap component."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4019,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1162,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4019,
                          "character": 22
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1163,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4019,
                              "character": 22
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1164,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the GoogleOneTap component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "GoogleOneTapProps"
                                },
                                "name": "GoogleOneTapProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.openGoogleOneTap"
                  }
                },
                {
                  "id": 1165,
                  "name": "openOrganizationProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk OrganizationProfile modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4047,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1166,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4047,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1167,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4047,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1168,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the OrganizationProfile component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "OrganizationProfileProps"
                                },
                                "name": "OrganizationProfileProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.openOrganizationProfile"
                  }
                },
                {
                  "id": 1169,
                  "name": "openSignIn",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk SignIn component in a modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3999,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1170,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 3999,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1171,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 3999,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1172,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional sign in configuration parameters."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "SignInProps"
                                },
                                "name": "SignInProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.openSignIn"
                  }
                },
                {
                  "id": 1173,
                  "name": "openSignUp",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk SignUp component in a modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4029,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1174,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4029,
                          "character": 16
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1175,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4029,
                              "character": 16
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1176,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the SignUp component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "SignUpProps"
                                },
                                "name": "SignUpProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.openSignUp"
                  }
                },
                {
                  "id": 1177,
                  "name": "openUserProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk UserProfile modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4038,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1178,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4038,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1179,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4038,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1180,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the UserProfile component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "UserProfileProps"
                                },
                                "name": "UserProfileProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.openUserProfile"
                  }
                },
                {
                  "id": 1181,
                  "name": "openWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Opens the Clerk Waitlist modal."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4065,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1182,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4065,
                          "character": 18
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1183,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4065,
                              "character": 18
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1184,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Optional props that will be passed to the Waitlist component."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "WaitlistProps"
                                },
                                "name": "WaitlistProps",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.openWaitlist"
                  }
                },
                {
                  "id": 1185,
                  "name": "organization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Active Organization"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3983,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "OrganizationResource"
                        },
                        "name": "OrganizationResource",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.organization"
                  }
                },
                {
                  "id": 1186,
                  "name": "proxyUrl",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk Proxy url string."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3969,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.proxyUrl"
                  }
                },
                {
                  "id": 1187,
                  "name": "publishableKey",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk Publishable Key string."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3967,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.publishableKey"
                  }
                },
                {
                  "id": 1188,
                  "name": "redirectToAfterSignIn",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured afterSignIn URL."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4295,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1189,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4295,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1190,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4295,
                              "character": 27
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.redirectToAfterSignIn"
                  }
                },
                {
                  "id": 1191,
                  "name": "redirectToAfterSignOut",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured afterSignOut URL."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4303,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1192,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4303,
                          "character": 28
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1193,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4303,
                              "character": 28
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.redirectToAfterSignOut"
                  }
                },
                {
                  "id": 1194,
                  "name": "redirectToAfterSignUp",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured afterSignUp URL."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4299,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1195,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4299,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1196,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4299,
                              "character": 27
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.redirectToAfterSignUp"
                  }
                },
                {
                  "id": 1197,
                  "name": "redirectToCreateOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured URL where <CreateOrganization /> is mounted."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4291,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1198,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4291,
                          "character": 34
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1199,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4291,
                              "character": 34
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.redirectToCreateOrganization"
                  }
                },
                {
                  "id": 1200,
                  "name": "redirectToOrganizationProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured URL where <OrganizationProfile /> is mounted."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4287,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1201,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4287,
                          "character": 35
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1202,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4287,
                              "character": 35
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.redirectToOrganizationProfile"
                  }
                },
                {
                  "id": 1203,
                  "name": "redirectToSignIn",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4273,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1204,
                      "name": "redirectToSignIn",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Redirects to the configured URL where <SignIn/> is mounted."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4273,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1205,
                          "name": "opts",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "A "
                              },
                              {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "RedirectOptions",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "RedirectOptions"
                                }
                              },
                              {
                                "kind": "text",
                                "text": " object"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "SignInRedirectOptions"
                            },
                            "name": "SignInRedirectOptions",
                            "package": "@clerk/types"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.redirectToSignIn"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.redirectToSignIn"
                  }
                },
                {
                  "id": 1206,
                  "name": "redirectToSignUp",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4279,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1207,
                      "name": "redirectToSignUp",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Redirects to the configured URL where <SignUp/> is mounted."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4279,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1208,
                          "name": "opts",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "A "
                              },
                              {
                                "kind": "inline-tag",
                                "tag": "@link",
                                "text": "RedirectOptions",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "RedirectOptions"
                                }
                              },
                              {
                                "kind": "text",
                                "text": " object"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "SignUpRedirectOptions"
                            },
                            "name": "SignUpRedirectOptions",
                            "package": "@clerk/types"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.redirectToSignUp"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.redirectToSignUp"
                  }
                },
                {
                  "id": 1209,
                  "name": "redirectToUserProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured URL where <UserProfile/> is mounted."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4283,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1210,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4283,
                          "character": 27
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1211,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4283,
                              "character": 27
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.redirectToUserProfile"
                  }
                },
                {
                  "id": 1212,
                  "name": "redirectToWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Redirects to the configured URL where <Waitlist/> is mounted."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4307,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1213,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4307,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1214,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4307,
                              "character": 24
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.redirectToWaitlist"
                  }
                },
                {
                  "id": 1215,
                  "name": "redirectWithAuth",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4267,
                      "character": 4
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1216,
                      "name": "redirectWithAuth",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isInherited": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Redirects to the provided url after decorating it with the auth token for development instances."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4267,
                          "character": 4
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1217,
                          "name": "to",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      },
                      "inheritedFrom": {
                        "type": "reference",
                        "target": -1,
                        "name": "Clerk.redirectWithAuth"
                      }
                    }
                  ],
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.redirectWithAuth"
                  }
                },
                {
                  "id": 1218,
                  "name": "sdkMetadata",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "If present, contains information about the SDK that the host application is using.\nFor example, if Clerk is loaded through "
                      },
                      {
                        "kind": "code",
                        "text": "`@clerk/nextjs`"
                      },
                      {
                        "kind": "text",
                        "text": ", this would be "
                      },
                      {
                        "kind": "code",
                        "text": "`{ name: '@clerk/nextjs', version: '1.0.0' }`"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3959,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "SDKMetadata"
                        },
                        "name": "SDKMetadata",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.sdkMetadata"
                  }
                },
                {
                  "id": 1219,
                  "name": "session",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Active Session."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3981,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "ActiveSessionResource"
                        },
                        "name": "ActiveSessionResource",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.session"
                  }
                },
                {
                  "id": 1220,
                  "name": "setActive",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Set the active session and organization explicitly.\n\nIf the session param is "
                      },
                      {
                        "kind": "code",
                        "text": "`null`"
                      },
                      {
                        "kind": "text",
                        "text": ", the active session is deleted.\nIn a similar fashion, if the organization param is "
                      },
                      {
                        "kind": "code",
                        "text": "`null`"
                      },
                      {
                        "kind": "text",
                        "text": ", the current organization is removed as active."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4206,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/types/src/index.ts",
                      "qualifiedName": "SetActive"
                    },
                    "name": "SetActive",
                    "package": "@clerk/types"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.setActive"
                  }
                },
                {
                  "id": 1221,
                  "name": "signOut",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Signs out the current user on single-session instances, or all users on multi-session instances"
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@param",
                        "name": "signOutCallback",
                        "content": [
                          {
                            "kind": "text",
                            "text": "Optional A callback that runs after sign out completes."
                          }
                        ]
                      },
                      {
                        "tag": "@param",
                        "name": "options",
                        "content": [
                          {
                            "kind": "text",
                            "text": "Optional Configuration options, see "
                          },
                          {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "SignOutOptions",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "SignOutOptions"
                            }
                          }
                        ]
                      },
                      {
                        "tag": "@returns",
                        "content": [
                          {
                            "kind": "text",
                            "text": "A promise that resolves when the sign out process completes."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3994,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/types/src/index.ts",
                      "qualifiedName": "SignOut"
                    },
                    "name": "SignOut",
                    "package": "@clerk/types"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.signOut"
                  }
                },
                {
                  "id": 1222,
                  "name": "telemetry",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3986,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "TelemetryCollector"
                        },
                        "name": "TelemetryCollector",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.telemetry"
                  }
                },
                {
                  "id": 1223,
                  "name": "unmountCreateOrganization",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount the CreateOrganization component from the target node."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4146,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1224,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4146,
                          "character": 31
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1225,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4146,
                              "character": 31
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1226,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the CreateOrganization component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.unmountCreateOrganization"
                  }
                },
                {
                  "id": 1227,
                  "name": "unmountOrganizationList",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount the organization list component from the target node.*"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4175,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1228,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4175,
                          "character": 29
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1229,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4175,
                              "character": 29
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1230,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the OrganizationList component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.unmountOrganizationList"
                  }
                },
                {
                  "id": 1231,
                  "name": "unmountOrganizationProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount the organization profile component from the target node."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4135,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1232,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4135,
                          "character": 32
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1233,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4135,
                              "character": 32
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1234,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the OrganizationProfile component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.unmountOrganizationProfile"
                  }
                },
                {
                  "id": 1235,
                  "name": "unmountOrganizationSwitcher",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount the organization profile component from the target node.*"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4157,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1236,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4157,
                          "character": 33
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1237,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4157,
                              "character": 33
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1238,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the OrganizationSwitcher component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.unmountOrganizationSwitcher"
                  }
                },
                {
                  "id": 1239,
                  "name": "unmountSignIn",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount a sign in flow component from the target element.\nIf there is no component mounted at the target node, results in a noop."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4082,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1240,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4082,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1241,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4082,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1242,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the SignIn component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.unmountSignIn"
                  }
                },
                {
                  "id": 1243,
                  "name": "unmountSignUp",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount a sign up flow component from the target element.\nIf there is no component mounted at the target node, results in a noop."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4096,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1244,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4096,
                          "character": 19
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1245,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4096,
                              "character": 19
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1246,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the SignUp component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.unmountSignUp"
                  }
                },
                {
                  "id": 1247,
                  "name": "unmountUserButton",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount a user button component at the target element.\nIf there is no component mounted at the target node, results in a noop."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4110,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1248,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4110,
                          "character": 23
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1249,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4110,
                              "character": 23
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1250,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the UserButton component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.unmountUserButton"
                  }
                },
                {
                  "id": 1251,
                  "name": "unmountUserProfile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount a user profile component at the target element.\nIf there is no component mounted at the target node, results in a noop."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4124,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1252,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4124,
                          "character": 24
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1253,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4124,
                              "character": 24
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1254,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the UserProfile component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.unmountUserProfile"
                  }
                },
                {
                  "id": 1255,
                  "name": "unmountWaitlist",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Unmount the Waitlist component from the target node."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 4186,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1256,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "types/dist/index.d.ts",
                          "line": 4186,
                          "character": 21
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1257,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "types/dist/index.d.ts",
                              "line": 4186,
                              "character": 21
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1258,
                              "name": "targetNode",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "comment": {
                                "summary": [
                                  {
                                    "kind": "text",
                                    "text": "Target node to unmount the Waitlist component from."
                                  }
                                ]
                              },
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.6.3/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "HTMLDivElement"
                                },
                                "name": "HTMLDivElement",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.unmountWaitlist"
                  }
                },
                {
                  "id": 1259,
                  "name": "updateClient",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "astro/src/types.ts",
                      "line": 33,
                      "character": 2,
                      "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L33"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1260,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 33,
                          "character": 16,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L33"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1261,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 33,
                              "character": 16,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L33"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1262,
                              "name": "client",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/types/src/index.ts",
                                  "qualifiedName": "ClientResource"
                                },
                                "name": "ClientResource",
                                "package": "@clerk/types"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1263,
                  "name": "user",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Current User."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3985,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/types/src/index.ts",
                          "qualifiedName": "UserResource"
                        },
                        "name": "UserResource",
                        "package": "@clerk/types"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.user"
                  }
                },
                {
                  "id": 1264,
                  "name": "version",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isInherited": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Clerk SDK version number."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "types/dist/index.d.ts",
                      "line": 3954,
                      "character": 4
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Clerk.version"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    979, 982, 986, 989, 994, 998, 1002, 1006, 1010, 1039, 1040, 1043, 1046, 1049, 1052, 1055, 1058,
                    1061, 1065, 1066, 1067, 1071, 1079, 1088, 1096, 1099, 1100, 1101, 1102, 1106, 1110, 1111, 1116,
                    1121, 1126, 1131, 1136, 1141, 1146, 1151, 1156, 1157, 1161, 1165, 1169, 1173, 1177, 1181, 1185,
                    1186, 1187, 1188, 1191, 1194, 1197, 1200, 1209, 1212, 1218, 1219, 1220, 1221, 1222, 1223, 1227,
                    1231, 1235, 1239, 1243, 1247, 1251, 1255, 1259, 1263, 1264
                  ]
                },
                {
                  "title": "Methods",
                  "children": [990, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1029, 1032, 1035, 1037, 1203, 1206, 1215]
                }
              ],
              "sources": [
                {
                  "fileName": "astro/src/types.ts",
                  "line": 31,
                  "character": 17,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L31"
                }
              ],
              "extendedTypes": [
                {
                  "type": "reference",
                  "target": {
                    "sourceFileName": "packages/types/src/index.ts",
                    "qualifiedName": "Clerk"
                  },
                  "name": "Clerk",
                  "package": "@clerk/types"
                }
              ],
              "extendedBy": [
                {
                  "type": "reference",
                  "target": 683,
                  "name": "BrowserClerk"
                }
              ]
            },
            {
              "id": 1265,
              "name": "ProtectProps",
              "variant": "declaration",
              "kind": 2097152,
              "flags": {},
              "sources": [
                {
                  "fileName": "astro/src/types.ts",
                  "line": 50,
                  "character": 5,
                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L50"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1266,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 1267,
                          "name": "condition",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 52,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L52"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        },
                        {
                          "id": 1268,
                          "name": "permission",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 54,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L54"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        },
                        {
                          "id": 1269,
                          "name": "role",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 53,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L53"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "OrganizationCustomRoleKey"
                            },
                            "name": "OrganizationCustomRoleKey",
                            "package": "@clerk/types"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [1267, 1268, 1269]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 51,
                          "character": 4,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L51"
                        }
                      ]
                    }
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1270,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 1271,
                          "name": "condition",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 57,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L57"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        },
                        {
                          "id": 1272,
                          "name": "permission",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 59,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L59"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/types/src/index.ts",
                              "qualifiedName": "OrganizationCustomPermissionKey"
                            },
                            "name": "OrganizationCustomPermissionKey",
                            "package": "@clerk/types"
                          }
                        },
                        {
                          "id": 1273,
                          "name": "role",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 58,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L58"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [1271, 1272, 1273]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 56,
                          "character": 4,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L56"
                        }
                      ]
                    }
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1274,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 1275,
                          "name": "condition",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 62,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L62"
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1276,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "astro/src/types.ts",
                                  "line": 62,
                                  "character": 17,
                                  "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L62"
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 1277,
                                  "name": "__type",
                                  "variant": "signature",
                                  "kind": 4096,
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 1278,
                                      "name": "has",
                                      "variant": "param",
                                      "kind": 32768,
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "packages/types/src/index.ts",
                                          "qualifiedName": "CheckAuthorizationWithCustomPermissions"
                                        },
                                        "name": "CheckAuthorizationWithCustomPermissions",
                                        "package": "@clerk/types"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 1279,
                          "name": "permission",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 64,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L64"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        },
                        {
                          "id": 1280,
                          "name": "role",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 63,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L63"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [1275, 1279, 1280]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 61,
                          "character": 4,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L61"
                        }
                      ]
                    }
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1281,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 1282,
                          "name": "condition",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 67,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L67"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        },
                        {
                          "id": 1283,
                          "name": "permission",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 69,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L69"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        },
                        {
                          "id": 1284,
                          "name": "role",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "astro/src/types.ts",
                              "line": 68,
                              "character": 6,
                              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L68"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [1282, 1283, 1284]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "astro/src/types.ts",
                          "line": 66,
                          "character": 4,
                          "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L66"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Interfaces",
              "children": [683, 978]
            },
            {
              "title": "Type Aliases",
              "children": [678, 681, 682, 972, 1265]
            }
          ],
          "sources": [
            {
              "fileName": "astro/src/types.ts",
              "line": 1,
              "character": 0,
              "url": "https://github.com/clerk/javascript/blob/main/packages/astro/src/types.ts#L1"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Modules",
          "children": [651, 677]
        }
      ],
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_astro\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/astro</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_astro)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/astro/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_astro)\n\n</div>\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_astro) is the easiest way to add authentication and user management to your Astro application. Add sign up, sign in, and profile management to your application in minutes.\n\n### Prerequisites\n\n- Astro 3.2 or later\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_astro).\n\n### Installation\n\nThe fastest way to get started with Clerk is by following the [Astro Quickstart](https://clerk.com/docs/quickstarts/astro?utm_source=github&utm_medium=clerk_astro).\n\nYou'll learn how to install "
        },
        {
          "kind": "code",
          "text": "`@clerk/astro`"
        },
        {
          "kind": "text",
          "text": ", set up your environment keys, add the "
        },
        {
          "kind": "code",
          "text": "`clerk()`"
        },
        {
          "kind": "text",
          "text": " integration to your application, use the Clerk middleware, and use Clerk's prebuilt components.\n\n## Usage\n\nFor further information, guides, and examples visit the [Astro reference documentation](https://clerk.com/docs/references/astro/overview?utm_source=github&utm_medium=clerk_astro).\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_astro)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/astro`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/astro`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/astro/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1285,
      "name": "@clerk/backend",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_backend\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/backend</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_backend)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/backend/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_backend)\n\n</div>\n\n## Getting Started\n\n[Clerk's](https://clerk.com/?utm_source=github&utm_medium=clerk_backend) JavaScript Backend SDK exposes [Clerk's Backend API](https://clerk.com/docs/reference/backend-api) resources and low-level authentication utilities **for JavaScript environments**.\n\n### Prerequisites\n\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " (or later) or any V8 isolates runtime\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_backend).\n\n### Installation\n\nThe fastest way to get started with "
        },
        {
          "kind": "code",
          "text": "`@clerk/backend`"
        },
        {
          "kind": "text",
          "text": " is by following the [JavaScript Backend SDK reference documentation](https://clerk.com/docs/references/backend/overview?utm_source=github&utm_medium=clerk_backend).\n\nYou'll learn how to install "
        },
        {
          "kind": "code",
          "text": "`@clerk/backend`"
        },
        {
          "kind": "text",
          "text": " and how to use "
        },
        {
          "kind": "code",
          "text": "`createClerkClient()`"
        },
        {
          "kind": "text",
          "text": ".\n\n## Usage\n\nFor further information, guides, and examples visit the [JavaScript Backend SDK reference documentation](https://clerk.com/docs/references/backend/overview?utm_source=github&utm_medium=clerk_backend). It lists all the available APIs and methods.\n\n## Testing\n\nThis project uses [vitest](https://vitest.dev/) as the unit test runner and [msw](https://mswjs.io/) for mocking network requests.\n\nIf you need to see which requests are being intercepted by "
        },
        {
          "kind": "code",
          "text": "`msw`"
        },
        {
          "kind": "text",
          "text": ", you can run the test suite with the following env: "
        },
        {
          "kind": "code",
          "text": "`DEBUG_MOCK_REQUESTS=true`"
        },
        {
          "kind": "text",
          "text": "\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_backend)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/backend`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/backend`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/backend/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1286,
      "name": "@clerk/chrome-extension",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_chrome_extension\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/chrome-extension</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_chrome_extension)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/chrome-extension/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_chrome_extension)\n\n</div>\n\n## Getting Started\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_chrome_extension) is the easiest way to add authentication and user management to your Chrome Extension. Add sign up, sign in, and profile management to your application in minutes.\n\n### Prerequisites\n\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_chrome_extension).\n- An existing React app (using [Vite](https://crxjs.dev/vite-plugin/) for example)\n\n### Installation\n\n1. Add "
        },
        {
          "kind": "code",
          "text": "`@clerk/chrome-extension`"
        },
        {
          "kind": "text",
          "text": " to your project:\n\n   "
        },
        {
          "kind": "code",
          "text": "```shell\n   npm install @clerk/chrome-extension\n   ```"
        },
        {
          "kind": "text",
          "text": "\n\n1. Retrieve the **Publishable key** from your [Clerk dashboard](https://dashboard.clerk.com/last-active?path=api-keys) and set it as an environment variable. For example, if you used Vite:\n\n   "
        },
        {
          "kind": "code",
          "text": "```sh\n   VITE_CLERK_PUBLISHABLE_KEY=pk_test_xxx\n   ```"
        },
        {
          "kind": "text",
          "text": "\n\n1. Add "
        },
        {
          "kind": "code",
          "text": "`<ClerkProvider>`"
        },
        {
          "kind": "text",
          "text": " to your app and define the "
        },
        {
          "kind": "code",
          "text": "`routerPush`"
        },
        {
          "kind": "text",
          "text": " & "
        },
        {
          "kind": "code",
          "text": "`routerReplace`"
        },
        {
          "kind": "text",
          "text": " properties. For example, with using "
        },
        {
          "kind": "code",
          "text": "`react-router-dom`"
        },
        {
          "kind": "text",
          "text": ":\n\n   "
        },
        {
          "kind": "code",
          "text": "```tsx\n   // App.tsx\n   import { SignedIn, SignedOut, SignIn, SignUp, ClerkProvider } from '@clerk/chrome-extension';\n   import { useNavigate, Routes, Route, MemoryRouter } from 'react-router-dom';\n\n   function HelloUser() {\n     return <p>Hello user</p>;\n   }\n\n   const publishableKey = process.env.VITE_CLERK_PUBLISHABLE_KEY || '';\n\n   function ClerkProviderWithRoutes() {\n     const navigate = useNavigate();\n\n     return (\n       <ClerkProvider\n         publishableKey={publishableKey}\n         routerPush={to => navigate(to)}\n         routerReplace={to => navigate(to, { replace: true })}\n       >\n         <Routes>\n           <Route\n             path='/sign-up/*'\n             element={<SignUp signInUrl='/' />}\n           />\n           <Route\n             path='/'\n             element={\n               <>\n                 <SignedIn>\n                   <HelloUser />\n                 </SignedIn>\n                 <SignedOut>\n                   <SignIn\n                     afterSignInUrl='/'\n                     signUpUrl='/sign-up'\n                   />\n                 </SignedOut>\n               </>\n             }\n           />\n         </Routes>\n       </ClerkProvider>\n     );\n   }\n\n   function App() {\n     return (\n       <MemoryRouter>\n         <ClerkProviderWithRoutes />\n       </MemoryRouter>\n     );\n   }\n\n   export default App;\n   ```"
        },
        {
          "kind": "text",
          "text": "\n\n## Usage\n\nExample repositories:\n\n- [Standalone](https://github.com/clerk/clerk-chrome-extension-starter/tree/main): The extension is using its own authentication\n- [WebSSO](https://github.com/clerk/clerk-chrome-extension-starter/tree/webapp_sso): The extensions shares authentication with a website in the same browser\n\n### WebSSO\n\nIf you want to use **WebSSO** (extension shares authentication state with a website in same browser) you'll need to add the "
        },
        {
          "kind": "code",
          "text": "`syncSessionWithTab`"
        },
        {
          "kind": "text",
          "text": " prop to "
        },
        {
          "kind": "code",
          "text": "`<ClerkProvider>`"
        },
        {
          "kind": "text",
          "text": ".\n\n#### Extension Manifest ("
        },
        {
          "kind": "code",
          "text": "`manifest.json`"
        },
        {
          "kind": "text",
          "text": ")\n\nYou must enable the following permissions in your "
        },
        {
          "kind": "code",
          "text": "`manifest.json`"
        },
        {
          "kind": "text",
          "text": " file:\n\n"
        },
        {
          "kind": "code",
          "text": "```json\n{\n  \"permissions\": [\"cookies\", \"storage\"]\n}\n```"
        },
        {
          "kind": "text",
          "text": "\n\nMore info on the \"cookies\" permission: [Google Developer Cookies Reference](https://developer.chrome.com/docs/extensions/reference/cookies/).\nMore info on the \"storage\" permission: [Google Developer Storage Reference](https://developer.chrome.com/docs/extensions/reference/storage/).\n\n#### Host Permissions\n\nYou must enable the following host permissions in your "
        },
        {
          "kind": "code",
          "text": "`manifest.json`"
        },
        {
          "kind": "text",
          "text": " file:\n\n- **Development:** "
        },
        {
          "kind": "code",
          "text": "`\"host_permissions\": [\"http://localhost\"]`"
        },
        {
          "kind": "text",
          "text": "\n  - If you're using a domain other than "
        },
        {
          "kind": "code",
          "text": "`localhost`"
        },
        {
          "kind": "text",
          "text": ", you'll want replace that entry with your domain: "
        },
        {
          "kind": "code",
          "text": "`http://<DOMAIN>`"
        },
        {
          "kind": "text",
          "text": "\n- **Production:** "
        },
        {
          "kind": "code",
          "text": "`\"host_permissions\": [\"https://<YOUR_CLERK_FRONTEND_API_GOES_HERE>/\"]`"
        },
        {
          "kind": "text",
          "text": "\n  - Your Frontend API URL can be found in [Clerk Dashboard](https://dashboard.clerk.com/last-active?path=api-keys) under the **Show API URLs** option.\n\nFor more info on host permissions visit [Google's developer "
        },
        {
          "kind": "code",
          "text": "`host_permissions`"
        },
        {
          "kind": "text",
          "text": " reference](https://developer.chrome.com/docs/extensions/mv3/declare_permissions/#host-permissions).\n\n#### Clerk Settings\n\nAdd your Chrome extension origin to your instance's "
        },
        {
          "kind": "code",
          "text": "`allowed_origins`"
        },
        {
          "kind": "text",
          "text": " using the [Backend API](https://clerk.com/docs/reference/backend-api):\n\n"
        },
        {
          "kind": "code",
          "text": "```bash\ncurl  -X PATCH https://api.clerk.com/v1/instance \\\n      -H \"Authorization: Bearer sk_secret_key\" \\\n      -H \"Content-type: application/json\" \\\n      -d '{\"allowed_origins\": [\"chrome-extension://extension_id_goes_here\"]}'\n```"
        },
        {
          "kind": "text",
          "text": "\n\nSetting the "
        },
        {
          "kind": "code",
          "text": "`allowed_origins`"
        },
        {
          "kind": "text",
          "text": " is **required** for both **Development** and **Production** instances.\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_chrome_extension)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/chrome-extension`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/chrome-extension`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/chrome-extension/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1287,
      "name": "@clerk/clerk-js",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_js\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/clerk-js</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_js)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/clerk-js/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_js)\n\n</div>\n\n## Getting Started\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_js) is the easiest way to add authentication and user management to your JavaScript application. Add sign up, sign in, and profile management to your application in minutes.\n\n### Prerequisites\n\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_js).\n\n### Installation\n\nThe fastest way to get started with Clerk is by following the [JavaScript Quickstart](https://clerk.com/docs/quickstarts/javascript?utm_source=github&utm_medium=clerk_js).\n\nYou'll learn how to add the ClerkJS SDK to your application (either through "
        },
        {
          "kind": "code",
          "text": "`<script>`"
        },
        {
          "kind": "text",
          "text": " tag or NPM module) and use Clerk's prebuilt components.\n\n## Usage\n\nFor further information, guides, and examples visit the [ClerkJS reference documentation](https://clerk.com/docs/references/javascript/overview?utm_source=github&utm_medium=clerk_js).\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_js)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/clerk-js`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/clerk-js`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/clerk-js/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1288,
      "name": "@clerk/elements",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_elements\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/elements</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_elements)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/elements/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_elements)\n\n</div>\n\n## Getting started\n\nClerk Elements is a library of unstyled, composable components that can be used to build completely custom UIs on top of Clerk's APIs, without having to manage the underlying logic.\n\n> [!WARNING]\n> Clerk Elements is currently in beta. It's not recommended to use it in production just yet, but it would be much appreciated if you give it a try.\n> If you have any feedback, please reach out to [beta-elements@clerk.dev](mailto:beta-elements@clerk.dev) or head over to the [GitHub Discussion](https://github.com/orgs/clerk/discussions/3315).\n\n### Prerequisites\n\n- Next.js "
        },
        {
          "kind": "code",
          "text": "`^13.5.4 || ^14.0.3`"
        },
        {
          "kind": "text",
          "text": " or later\n- React 18 or later\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- Use the [Core 2 version](https://clerk.com/changelog/2024-04-19) (or later) of Clerk's SDKs\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_elements).\n\n### Installation\n\nThe fastest way to get started with Clerk Elements is by following the [Clerk Elements \"Getting started\" guide](https://clerk.com/docs/customization/elements/overview#getting-started?utm_source=github&utm_medium=clerk_elements).\n\n## Usage\n\nFor further information, guides, and examples visit the [Clerk Elements reference documentation](https://clerk.com/docs/customization/elements/overview?utm_source=github&utm_medium=clerk_elements).\n\nThe following guides will show you how to build your own custom flows:\n\n- [Build a sign-in flow](https://clerk.com/docs/customization/elements/guides/sign-in?utm_source=github&utm_medium=clerk_elements)\n- [Build a sign-up flow](https://clerk.com/docs/customization/elements/guides/sign-up?utm_source=github&utm_medium=clerk_elements)\n\nIf you want to see what's possible with Clerk Elements, check out these pre-built examples from the Clerk team:\n\n- [Sign-in examples](https://clerk.com/docs/customization/elements/examples/sign-in?utm_source=github&utm_medium=clerk_elements)\n- [Sign-up examples](https://clerk.com/docs/customization/elements/examples/sign-up?utm_source=github&utm_medium=clerk_elements)\n\nFinally, to learn about the available components and how to use them, check out the component reference pages:\n\n- [Common components](https://clerk.com/docs/customization/elements/reference/common?utm_source=github&utm_medium=clerk_elements)\n- [Sign-in components](https://clerk.com/docs/customization/elements/reference/sign-in?utm_source=github&utm_medium=clerk_elements)\n- [Sign-up components](https://clerk.com/docs/customization/elements/reference/sign-up?utm_source=github&utm_medium=clerk_elements)\n\n_With the beta release, only sign-up and sign-in flows are supported. Support for building the rest of Clerk's prebuilt components with Elements is actively being worked on._\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_elements)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/elements`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/elements`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/elements/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1289,
      "name": "@clerk/clerk-expo",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_expo\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/clerk-expo</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_expo)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/expo/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_expo)\n\n</div>\n\n## Getting Started\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_expo) is the easiest way to add authentication and user management to your Expo application. Add sign up, sign in, and profile management to your application in minutes.\n\n### Prerequisites\n\n- React 18 or later\n- Expo 50 or later\n- React Native 0.73 or later\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- An existing Expo application\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_expo).\n\n### Installation\n\nThe fastest way to get started with Clerk is by following the [Expo Quickstart](https://clerk.com/docs/quickstarts/expo?utm_source=github&utm_medium=clerk_expo).\n\nYou'll learn how to create an Expo application, install "
        },
        {
          "kind": "code",
          "text": "`@clerk/expo`"
        },
        {
          "kind": "text",
          "text": ", set up your environment keys, add "
        },
        {
          "kind": "code",
          "text": "`<ClerkProvider>`"
        },
        {
          "kind": "text",
          "text": ", protect specific pages, and use Clerk's React hooks.\n\n## Usage\n\nFor further information, guides, and examples visit the [Expo reference documentation](https://clerk.com/docs/references/expo/overview?utm_source=github&utm_medium=clerk_expo).\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_expo)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/clerk-expo`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/clerk-expo`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/expo/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1290,
      "name": "@clerk/express",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_express\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/express</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_express)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/express/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_express)\n\n</div>\n\n## Getting Started\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_express) is the easiest way to add authentication and user management to your Express application. Add sign up, sign in, and profile management to your application in minutes.\n\n### Prerequisites\n\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_express).\n- An existing Express application (follow their [Getting started](https://expressjs.com/en/starter/installing.html) guide)\n\n### Installation\n\n"
        },
        {
          "kind": "code",
          "text": "```sh\nnpm install @clerk/express\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Usage\n\nNavigate to the [Clerk Dashboard](https://dashboard.clerk.com/last-active?path=api-keys) and inside the **API Keys** section copy the publishable key and secret key.\n\nPaste your keys into an "
        },
        {
          "kind": "code",
          "text": "`.env`"
        },
        {
          "kind": "text",
          "text": " file:\n\n"
        },
        {
          "kind": "code",
          "text": "```sh\nCLERK_PUBLISHABLE_KEY=pk_*******\nCLERK_SECRET_KEY=sk_******\n```"
        },
        {
          "kind": "text",
          "text": "\n\nEnsure that the environment variables are loaded, for example by using "
        },
        {
          "kind": "code",
          "text": "`dotenv`"
        },
        {
          "kind": "text",
          "text": " at the top of your Express application:\n\n"
        },
        {
          "kind": "code",
          "text": "```js\nimport 'dotenv/config';\n\n// Rest of application\n```"
        },
        {
          "kind": "text",
          "text": "\n\n### "
        },
        {
          "kind": "code",
          "text": "`clerkMiddleware()`"
        },
        {
          "kind": "text",
          "text": "\n\nThe "
        },
        {
          "kind": "code",
          "text": "`clerkMiddleware()`"
        },
        {
          "kind": "text",
          "text": " function checks the request's cookies and headers for a session JWT and, if found, attaches the ["
        },
        {
          "kind": "code",
          "text": "`Auth`"
        },
        {
          "kind": "text",
          "text": "](https://clerk.com/docs/references/nextjs/auth-object#auth-object) object to the request object under the "
        },
        {
          "kind": "code",
          "text": "`auth`"
        },
        {
          "kind": "text",
          "text": " key.\n\n"
        },
        {
          "kind": "code",
          "text": "```js\nimport { clerkMiddleware } from '@clerk/express';\nimport express from 'express';\n\nconst app = express();\n\n// Pass no parameters\napp.use(clerkMiddleware());\n\n// Pass options\napp.use(clerkMiddleware(options));\n```"
        },
        {
          "kind": "text",
          "text": "\n\n### "
        },
        {
          "kind": "code",
          "text": "`requireAuth`"
        },
        {
          "kind": "text",
          "text": "\n\nThe "
        },
        {
          "kind": "code",
          "text": "`requireAuth()`"
        },
        {
          "kind": "text",
          "text": " middleware functions similarly to "
        },
        {
          "kind": "code",
          "text": "`clerkMiddleware()`"
        },
        {
          "kind": "text",
          "text": ", but also protects your routes by redirecting unauthenticated users to the sign-in page.\n\nThe sign-in path will be read from the "
        },
        {
          "kind": "code",
          "text": "`signInUrl`"
        },
        {
          "kind": "text",
          "text": " option or the "
        },
        {
          "kind": "code",
          "text": "`CLERK_SIGN_IN_URL`"
        },
        {
          "kind": "text",
          "text": " environment variable if available.\n\n"
        },
        {
          "kind": "code",
          "text": "```js\nimport { requireAuth } from '@clerk/express';\nimport express from 'express';\n\nconst app = express();\n\n// Apply centralized middleware\napp.use(requireAuth());\n\n// Apply middleware to a specific route\napp.get('/protected', requireAuth(), (req, res) => {\n  res.send('This is a protected route');\n});\n\n// Custom sign-in URL\napp.get('/protected', requireAuth({ signInUrl: '/sign-in' }), (req, res) => {\n  res.send('This is a protected route');\n});\n```"
        },
        {
          "kind": "text",
          "text": "\n\n### "
        },
        {
          "kind": "code",
          "text": "`getAuth()`"
        },
        {
          "kind": "text",
          "text": "\n\nThe "
        },
        {
          "kind": "code",
          "text": "`getAuth()`"
        },
        {
          "kind": "text",
          "text": " helper retrieves authentication state from the request object. See the [Next.js reference documentation](https://clerk.com/docs/references/nextjs/get-auth) for more information on how to use it.\n\n"
        },
        {
          "kind": "code",
          "text": "```js\nimport { clerkMiddleware, getAuth } from '@clerk/express';\nimport express from 'express';\n\nconst app = express();\n\n// Apply centralized middleware\napp.use(clerkMiddleware());\n\n// Protect a route based on authorization status\nhasPermission = (request, response, next) => {\n  const auth = getAuth(request);\n\n  // Handle if the user is not authorized\n  if (!auth.has({ permission: 'org:admin:testpermission' })) {\n    return response.status(403).send('Unauthorized');\n  }\n\n  return next();\n};\n\napp.get('/path', requireAuth, hasPermission, (req, res) => res.json(req.auth));\n```"
        },
        {
          "kind": "text",
          "text": "\n\n### "
        },
        {
          "kind": "code",
          "text": "`clerkClient`"
        },
        {
          "kind": "text",
          "text": "\n\n[Clerk's JavaScript Backend SDK](/docs/references/backend/overview) exposes Clerk's Backend API resources and low-level authentication utilities for JavaScript environments. For example, if you wanted to get a list of all users in your application, instead of creating a fetch to Clerk's "
        },
        {
          "kind": "code",
          "text": "`https://api.clerk.com/v1/users`"
        },
        {
          "kind": "text",
          "text": " endpoint, you can use the "
        },
        {
          "kind": "code",
          "text": "`users.getUserList()`"
        },
        {
          "kind": "text",
          "text": " method provided by the JavaScript Backend SDK.\n\nAll resource operations are mounted as sub-APIs on the "
        },
        {
          "kind": "code",
          "text": "`clerkClient`"
        },
        {
          "kind": "text",
          "text": " object. See the [reference documentation](/docs/references/backend/overview#usage) for more information.\n\n"
        },
        {
          "kind": "code",
          "text": "```js\nimport { clerkClient } from '@clerk/express';\nimport express from 'express';\n\nconst app = express();\n\napp.get('/users', requireAuth, async (req, res) => {\n  const users = await clerkClient.users.getUserList();\n  return res.json({ users });\n});\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_express)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/express`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/express`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/express/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1291,
      "name": "@clerk/fastify",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_fastify\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/fastify</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_fastify)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/fastify/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_fastify)\n\n</div>\n\n## Getting Started\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_fastify) is the easiest way to add authentication and user management to your Fastify application. Add sign up, sign in, and profile management to your application in minutes.\n\n### Prerequisites\n\n- Fastify "
        },
        {
          "kind": "code",
          "text": "`^5.0.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=20.0.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_fastify).\n\n### Installation\n\nThe fastest way to get started with Clerk is by following the [Fastify Quickstart](https://clerk.com/docs/quickstarts/fastify?utm_source=github&utm_medium=clerk_fastify).\n\nYou'll learn how to install "
        },
        {
          "kind": "code",
          "text": "`@clerk/fastify`"
        },
        {
          "kind": "text",
          "text": ", set up your environment keys, and configure the "
        },
        {
          "kind": "code",
          "text": "`clerkPlugin`"
        },
        {
          "kind": "text",
          "text": ".\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_fastify)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/fastify`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/fastify`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/fastify/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1292,
      "name": "@clerk/nextjs",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_nextjs\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/nextjs</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_nextjs)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/nextjs/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_nextjs)\n\n</div>\n\n## Getting Started\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_nextjs) is the easiest way to add authentication and user management to your Next.js application. Add sign up, sign in, and profile management to your application in minutes.\n\n### Prerequisites\n\n- Next.js 13.0.4 or later\n- React 18 or later\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_nextjs).\n\n### Installation\n\nThe fastest way to get started with Clerk is by following the [Next.js Quickstart](https://clerk.com/docs/quickstarts/nextjs?utm_source=github&utm_medium=clerk_nextjs).\n\nYou'll learn how to install "
        },
        {
          "kind": "code",
          "text": "`@clerk/nextjs`"
        },
        {
          "kind": "text",
          "text": ", set up your environment keys, add "
        },
        {
          "kind": "code",
          "text": "`<ClerkProvider>`"
        },
        {
          "kind": "text",
          "text": " to your application, use the Clerk middleware, and use Clerk's prebuilt components.\n\n## Usage\n\nFor further information, guides, and examples visit the [Next.js reference documentation](https://clerk.com/docs/references/nextjs/overview?utm_source=github&utm_medium=clerk_nextjs).\n\n## Upgrading\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/nextjs`"
        },
        {
          "kind": "text",
          "text": " supports upgrading through automatic code migration.\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_nextjs)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/nextjs`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/nextjs`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/nextjs/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1293,
      "name": "@clerk/clerk-react",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_react\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/clerk-react</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_react)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/react/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_react)\n\n</div>\n\n## Getting Started\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_react) is the easiest way to add authentication and user management to your React application. Add sign up, sign in, and profile management to your application in minutes.\n\n### Prerequisites\n\n- React 18 or later\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_react).\n\n### Installation\n\nThe fastest way to get started with Clerk is by following the [React Quickstart](https://clerk.com/docs/quickstarts/react?utm_source=github&utm_medium=clerk_react).\n\nYou'll learn how to create a new React application, install "
        },
        {
          "kind": "code",
          "text": "`@clerk/clerk-react`"
        },
        {
          "kind": "text",
          "text": ", set up your environment keys, add "
        },
        {
          "kind": "code",
          "text": "`<ClerkProvider>`"
        },
        {
          "kind": "text",
          "text": ", and use Clerk's prebuilt components.\n\n## Usage\n\nFor further information, guides, and examples visit the [React reference documentation](https://clerk.com/docs/references/react/overview?utm_source=github&utm_medium=clerk_react).\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_react)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/clerk-react`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/clerk-react`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/react/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1294,
      "name": "@clerk/remix",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_remix\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/remix</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_remix)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/remix/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_remix)\n\n</div>\n\n## Getting Started\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_remix) is the easiest way to add authentication and user management to your Remix application. Add sign up, sign in, and profile management to your application in minutes.\n\n### Prerequisites\n\n- Remix "
        },
        {
          "kind": "code",
          "text": "`^2.0.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- React 18 or later\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_remix).\n\n### Installation\n\nThe fastest way to get started with Clerk is by following the [Remix Quickstart](https://clerk.com/docs/quickstarts/remix?utm_source=github&utm_medium=clerk_remix).\n\nYou'll learn how to install "
        },
        {
          "kind": "code",
          "text": "`@clerk/remix`"
        },
        {
          "kind": "text",
          "text": ", set up your environment keys, configure "
        },
        {
          "kind": "code",
          "text": "`rootAuthLoader`"
        },
        {
          "kind": "text",
          "text": " & "
        },
        {
          "kind": "code",
          "text": "`ClerkApp`"
        },
        {
          "kind": "text",
          "text": ", and protect your pages.\n\n## Usage\n\nFor further information, guides, and examples visit the [Remix reference documentation](https://clerk.com/docs/references/remix/clerk-app?utm_source=github&utm_medium=clerk_remix).\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_remix)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/remix`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/remix`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/remix/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1295,
      "name": "@clerk/shared",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "# @clerk/shared\n\nUtilities used in "
        },
        {
          "kind": "code",
          "text": "`@clerk`"
        },
        {
          "kind": "text",
          "text": " packages"
        }
      ]
    },
    {
      "id": 1296,
      "name": "@clerk/tanstack-start",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_tanstack_start\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/tanstack-start</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_tanstack_start)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/tanstack-start/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_tanstack_start)\n\n</div>\n\n## Getting Started\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_tanstack_start) is the easiest way to add authentication and user management to your Tanstack Start application. Add sign up, sign in, and profile management to your application in minutes.\n\n> [!WARNING] > "
        },
        {
          "kind": "code",
          "text": "`@clerk/tanstack-start`"
        },
        {
          "kind": "text",
          "text": " is currently in beta. It's not recommended to use it in production just yet, but it would be much appreciated if you give it a try.\n\n### Prerequisites\n\n- Tanstack Start "
        },
        {
          "kind": "code",
          "text": "`^1.49.1`"
        },
        {
          "kind": "text",
          "text": " or later\n- Tanstack Router "
        },
        {
          "kind": "code",
          "text": "`^1.49.1`"
        },
        {
          "kind": "text",
          "text": " or later\n- React 18 or later\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_tanstack_start).\n\n### Installation\n\n"
        },
        {
          "kind": "code",
          "text": "```sh\nnpm install @clerk/tanstack-start\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Usage\n\nMake sure the following environment variables are set in a "
        },
        {
          "kind": "code",
          "text": "`.env`"
        },
        {
          "kind": "text",
          "text": " file:\n\n"
        },
        {
          "kind": "code",
          "text": "```sh\nCLERK_PUBLISHABLE_KEY=pk_test_xxx\nCLERK_SECRET_KEY=sk_test_xxx\n```"
        },
        {
          "kind": "text",
          "text": "\n\nYou can get these from the [API Keys](https://dashboard.clerk.com/last-active?path=api-keys) screen in your Clerk dashboard.\n\nTo initialize Clerk with your TanStack Start application, you will need to make one modification to "
        },
        {
          "kind": "code",
          "text": "`app/routes/_root.tsx`"
        },
        {
          "kind": "text",
          "text": ". Wrap the children of the "
        },
        {
          "kind": "code",
          "text": "`RootComponent`"
        },
        {
          "kind": "text",
          "text": " with "
        },
        {
          "kind": "code",
          "text": "`<ClerkProvider/>`"
        },
        {
          "kind": "text",
          "text": "\n\n"
        },
        {
          "kind": "code",
          "text": "```tsx\nimport { ClerkProvider } from '@clerk/tanstack-start'\nimport { createRootRoute } from '@tanstack/react-router'\nimport { Link, Outlet, ScrollRestoration } from '@tanstack/react-router'\nimport { TanStackRouterDevtools } from '@tanstack/router-devtools'\nimport { Body, Head, Html, Meta, Scripts } from '@tanstack/start'\nimport * as React from 'react'\nimport { DefaultCatchBoundary } from '~/components/DefaultCatchBoundary'\nimport { NotFound } from '~/components/NotFound'\n\nexport const Route = createRootRoute({\n  meta: () => [\n    {\n      charSet: 'utf-8',\n    },\n    {\n      name: 'viewport',\n      content: 'width=device-width, initial-scale=1',\n    },\n  ],\n  errorComponent: (props) => {\n    return (\n      <RootDocument>\n        <DefaultCatchBoundary {...props} />\n      </RootDocument>\n    )\n  },\n  notFoundComponent: () => <NotFound />,\n  component: RootComponent,\n})\n\nfunction RootComponent() {\n  return (\n    <ClerkProvider>\n      <RootDocument>\n          <Outlet />\n      </RootDocument>\n    </ClerkProvider>\n  )\n}\n\nfunction RootDocument({ children }: { children: React.ReactNode }) { ... }\n```"
        },
        {
          "kind": "text",
          "text": "\n\n### Setup "
        },
        {
          "kind": "code",
          "text": "`clerkHandler`"
        },
        {
          "kind": "text",
          "text": " in the SSR entrypoint\n\nYou will also need to make on more modification to you SSR entrypoint (default: "
        },
        {
          "kind": "code",
          "text": "`app/ssr.tsx`"
        },
        {
          "kind": "text",
          "text": "):\n\n- Wrap the "
        },
        {
          "kind": "code",
          "text": "`createStartHandler`"
        },
        {
          "kind": "text",
          "text": " with "
        },
        {
          "kind": "code",
          "text": "`createClerkHandler`"
        },
        {
          "kind": "text",
          "text": "\n\n"
        },
        {
          "kind": "code",
          "text": "```tsx\nimport { createStartHandler, defaultStreamHandler } from '@tanstack/start/server';\nimport { getRouterManifest } from '@tanstack/start/router-manifest';\nimport { createRouter } from './router';\nimport { createClerkHandler } from '@clerk/tanstack-start/server';\n\nconst handler = createStartHandler({\n  createRouter,\n  getRouterManifest,\n});\n\nconst clerkHandler = createClerkHandler(handler);\n\n/*\n * // You can also override Clerk options by passing an object as second argument\n * const clerkHandler = createClerkHandler(handler, {\n *   afterSignInUrl: '/dashboard',\n * });\n */\n\nexport default clerkHandler(defaultStreamHandler);\n```"
        },
        {
          "kind": "text",
          "text": "\n\nAfter those changes are made, you can use Clerk components in your routes.\n\nFor example, in "
        },
        {
          "kind": "code",
          "text": "`app/routes/index.tsx`"
        },
        {
          "kind": "text",
          "text": ":\n\n"
        },
        {
          "kind": "code",
          "text": "```tsx\nimport { SignIn, SignedIn, SignedOut, UserButton } from '@clerk/tanstack-start';\nimport { createFileRoute } from '@tanstack/react-router';\n\nexport const Route = createFileRoute('/')({\n  component: Home,\n});\n\nfunction Home() {\n  return (\n    <div className='p-2'>\n      <h1>Hello Clerk!</h1>\n      <SignedIn>\n        <UserButton />\n      </SignedIn>\n      <SignedOut>\n        <SignIn />\n      </SignedOut>\n    </div>\n  );\n}\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_tanstack_start)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/tanstack-start`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/tanstack-start`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/tanstack-start/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1297,
      "name": "@clerk/types",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_types\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/types</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_types)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/types/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_types)\n\n</div>\n\n---\n\n## Getting Started\n\nThis package provides the TypeScript type declarations for Clerk's SDKs.\n\n> [!NOTE]\n> Clerk's SDKs automatically include their own type definitions so typically it's not necessary to install "
        },
        {
          "kind": "code",
          "text": "`@clerk/types`"
        },
        {
          "kind": "text",
          "text": " separately.\n\n### Installation\n\n"
        },
        {
          "kind": "code",
          "text": "```sh\nnpm install @clerk/types --save-dev\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Usage\n\nImport types from "
        },
        {
          "kind": "code",
          "text": "`@clerk/types`"
        },
        {
          "kind": "text",
          "text": " like so:\n\n"
        },
        {
          "kind": "code",
          "text": "```ts\nimport type { OAuthStrategy } from '@clerk/types';\n\nexport type OAuthProps = {\n  oAuthOptions: OAuthStrategy[];\n  error?: string;\n  setError?: React.Dispatch<React.SetStateAction<string | undefined>>;\n};\n```"
        },
        {
          "kind": "text",
          "text": "\n\nYou can also [override Clerk interfaces with custom types](https://clerk.com/docs/guides/custom-types?utm_source=github&utm_medium=clerk_types).\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_types)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/types`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/types`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/types/LICENSE) for more information."
        }
      ]
    },
    {
      "id": 1298,
      "name": "@clerk/vue",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_vue\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n  <h1 align=\"center\">@clerk/vue</h1>\n</p>\n\n<div align=\"center\">\n\n[![Chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![Clerk documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs?utm_source=github&utm_medium=clerk_vue)\n[![Follow on Twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n[Changelog](https://github.com/clerk/javascript/blob/main/packages/vue/CHANGELOG.md)\n·\n[Report a Bug](https://github.com/clerk/javascript/issues/new?assignees=&labels=needs-triage&projects=&template=BUG_REPORT.yml)\n·\n[Request a Feature](https://feedback.clerk.com/roadmap)\n·\n[Get help](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_vue)\n\n</div>\n\n[Clerk](https://clerk.com/?utm_source=github&utm_medium=clerk_vue) is the easiest way to add authentication and user management to your Vue application. Add sign up, sign in, and profile management to your application in minutes.\n\n### Prerequisites\n\n- Vue 3.2 or later\n- Node.js "
        },
        {
          "kind": "code",
          "text": "`>=18.17.0`"
        },
        {
          "kind": "text",
          "text": " or later\n- An existing Clerk application. [Create your account for free](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_vue).\n\n### Installation\n\nAdd "
        },
        {
          "kind": "code",
          "text": "`@clerk/vue`"
        },
        {
          "kind": "text",
          "text": " as a dependency\n\n"
        },
        {
          "kind": "code",
          "text": "```bash\nnpm install @clerk/vue\n```"
        },
        {
          "kind": "text",
          "text": "\n\n### Build\n\nTo build the package locally with the TypeScript compiler, run:\n\n"
        },
        {
          "kind": "code",
          "text": "```bash\nnpm run build\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Usage\n\nMake sure the following environment variables are set in a "
        },
        {
          "kind": "code",
          "text": "`.env.local`"
        },
        {
          "kind": "text",
          "text": " file in your Vite project:\n\n"
        },
        {
          "kind": "code",
          "text": "```\nVITE_CLERK_PUBLISHABLE_KEY=[publishable-key]\n```"
        },
        {
          "kind": "text",
          "text": "\n\nThen, install the Clerk plugin in your main Vue application:\n\n"
        },
        {
          "kind": "code",
          "text": "```js\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport { clerkPlugin } from '@clerk/vue';\n\nconst PUBLISHABLE_KEY = import.meta.env.VITE_CLERK_PUBLISHABLE_KEY;\n\nconst app = createApp(App);\napp.use(clerkPlugin, {\n  publishableKey: PUBLISHABLE_KEY,\n});\napp.mount('#app');\n```"
        },
        {
          "kind": "text",
          "text": "\n\nYou can now start using Clerk's components. Here's a basic example showing a header component:\n\n"
        },
        {
          "kind": "code",
          "text": "```vue\n<script setup>\nimport { SignedIn, SignedOut, UserButton } from '@clerk/vue';\n</script>\n\n<template>\n  <header>\n    <h1>My App</h1>\n    <SignedIn>\n      <UserButton />\n    </SignedIn>\n    <SignedOut>\n      <a href=\"/sign-in\">Sign in</a>\n    </SignedOut>\n  </header>\n</template>\n```"
        },
        {
          "kind": "text",
          "text": "\n\n## Support\n\nYou can get in touch with us in any of the following ways:\n\n- Join our official community [Discord server](https://clerk.com/discord)\n- On [our support page](https://clerk.com/contact/support?utm_source=github&utm_medium=clerk_vue)\n\n## Contributing\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md) and [code of conduct](https://github.com/clerk/javascript/blob/main/docs/CODE_OF_CONDUCT.md).\n\n## Security\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/vue`"
        },
        {
          "kind": "text",
          "text": " follows good practices of security, but 100% security cannot be assured.\n\n"
        },
        {
          "kind": "code",
          "text": "`@clerk/vue`"
        },
        {
          "kind": "text",
          "text": " is provided **\"as is\"** without any **warranty**. Use at your own risk.\n\n_For more information and to report security issues, please refer to our [security documentation](https://github.com/clerk/javascript/blob/main/docs/SECURITY.md)._\n\n## License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/packages/vue/LICENSE) for more information."
        }
      ]
    }
  ],
  "packageName": "@clerk/javascript",
  "readme": [
    {
      "kind": "text",
      "text": "<p align=\"center\">\n  <a href=\"https://clerk.com?utm_source=github&utm_medium=clerk_javascript\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://images.clerk.com/static/logo-dark-mode-400x400.png\">\n      <img src=\"https://images.clerk.com/static/logo-light-mode-400x400.png\" height=\"64\">\n    </picture>\n  </a>\n  <br />\n</p>\n<h1 align=\"center\">\n  Official Clerk JavaScript SDKs\n</h1>\n<p align=\"center\">\n  <strong>\n    Clerk helps developers build user management. We provide streamlined user experiences for your users to sign up, sign in, and manage their profile.\n  </strong>\n</p>\n\nThis repository contains all the Clerk JavaScript SDKs under the "
    },
    {
      "kind": "code",
      "text": "`@clerk`"
    },
    {
      "kind": "text",
      "text": " namespace. Visit [clerk.com](https://clerk.com) to signup for an account.\n\n[![chat on Discord](https://img.shields.io/discord/856971667393609759.svg?logo=discord)](https://clerk.com/discord)\n[![documentation](https://img.shields.io/badge/documentation-clerk-green.svg)](https://clerk.com/docs)\n[![twitter](https://img.shields.io/twitter/follow/ClerkDev?style=social)](https://twitter.com/intent/follow?screen_name=ClerkDev)\n\n---\n\n**Clerk is Hiring!**\n\nWould you like to work on Open Source software and help maintain this repository? [Apply today!](https://jobs.ashbyhq.com/clerk).\n\n---\n\n## 🚀 Get Started with Clerk\n\n1. [Sign up for an account](https://dashboard.clerk.com/sign-up?utm_source=github&utm_medium=clerk_js_repo_readme)\n1. Create an application in your Clerk dashboard\n1. Spin up a new codebase with one of the [quickstart guides](https://clerk.com/docs/quickstarts/overview?utm_source=github&utm_medium=clerk_js_repo_readme)\n\nThis repository contains the SDKs for environment/platforms that Clerk supports. For example, if you want to use Clerk with Node.js you can install:\n\n"
    },
    {
      "kind": "code",
      "text": "```sh\nnpm install @clerk/backend\n# or\nyarn add @clerk/backend\n# or\npnpm add @clerk/backend\n```"
    },
    {
      "kind": "text",
      "text": "\n\n## 🎓 Learning Clerk\n\nClerk's full documentation is available at [clerk.com/docs](https://clerk.com/docs?utm_source=github&utm_medium=clerk_js_repo_readme).\n\n- **We recommend starting with the [Quickstart guides](https://clerk.com/docs/quickstarts/overview).** It'll enable you to quickly add Clerk to your application. If you're starting a new project and are not sure what to pick, use [Next.js](https://nextjs.org/docs/getting-started/installation) and [@clerk/nextjs](https://clerk.com/docs/quickstarts/nextjs).\n- **To learn more about Clerk's components and features, checkout the rest of the [Clerk documentation](https://clerk.com/docs?utm_source=github&utm_medium=clerk_js_repo_readme).** You'll be able to e.g. browse the [component reference](https://clerk.com/docs/components/overview?utm_source=github&utm_medium=clerk_js_repo_readme) page.\n\n## 🚢 Release Notes\n\nCurious what we shipped recently? You can browse the [GitHub Releases](https://github.com/clerk/javascript/releases) page or look at the individual "
    },
    {
      "kind": "code",
      "text": "`CHANGELOG.md`"
    },
    {
      "kind": "text",
      "text": " files inside each package (e.g. ["
    },
    {
      "kind": "code",
      "text": "`clerk-js CHANGELOG`"
    },
    {
      "kind": "text",
      "text": "](https://github.com/clerk/javascript/blob/main/packages/clerk-js/CHANGELOG.md)).\n\n## 🤝 How to Contribute\n\nWe're open to all community contributions! If you'd like to contribute in any way, please read [our contribution guidelines](https://github.com/clerk/javascript/blob/main/docs/CONTRIBUTING.md). We'd love to have you as part of the Clerk community!\n\nIt'll show you how to make changes to the SDKs, open pull requests, or submitting issues. If you want to add or edit localizations (e.g. how a button text is translated to your language), you can check out the ["
    },
    {
      "kind": "code",
      "text": "`localizations`"
    },
    {
      "kind": "text",
      "text": " README]("
    },
    {
      "kind": "relative-link",
      "text": "./packages/localizations/README.md",
      "target": 3
    },
    {
      "kind": "text",
      "text": ").\n\n## 📝 License\n\nThis project is licensed under the **MIT license**.\n\nSee [LICENSE](https://github.com/clerk/javascript/blob/main/LICENSE) for more information."
    }
  ],
  "symbolIdMap": {
    "651": {
      "sourceFileName": "packages/astro/src/client/index.ts",
      "qualifiedName": ""
    },
    "652": {
      "sourceFileName": "packages/astro/src/stores/external.ts",
      "qualifiedName": "$authStore"
    },
    "653": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type"
    },
    "654": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.__experimental_factorVerificationAge"
    },
    "655": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.actor"
    },
    "656": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.organization"
    },
    "657": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.orgId"
    },
    "658": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.orgPermissions"
    },
    "659": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.orgRole"
    },
    "660": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.orgSlug"
    },
    "661": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.session"
    },
    "662": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.sessionId"
    },
    "663": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.user"
    },
    "664": {
      "sourceFileName": "packages/shared/dist/deriveState.d.ts",
      "qualifiedName": "__type.userId"
    },
    "665": {
      "sourceFileName": "packages/astro/src/stores/external.ts",
      "qualifiedName": "$clerkStore"
    },
    "666": {
      "sourceFileName": "packages/astro/src/stores/external.ts",
      "qualifiedName": "$clientStore"
    },
    "667": {
      "sourceFileName": "packages/astro/src/stores/external.ts",
      "qualifiedName": "$isLoadedStore"
    },
    "668": {
      "sourceFileName": "packages/astro/src/stores/external.ts",
      "qualifiedName": "$organizationStore"
    },
    "669": {
      "sourceFileName": "packages/astro/src/stores/external.ts",
      "qualifiedName": "$sessionListStore"
    },
    "670": {
      "sourceFileName": "packages/astro/src/stores/external.ts",
      "qualifiedName": "$sessionStore"
    },
    "671": {
      "sourceFileName": "packages/astro/src/stores/external.ts",
      "qualifiedName": "$signInStore"
    },
    "672": {
      "sourceFileName": "packages/astro/src/stores/external.ts",
      "qualifiedName": "$signUpStore"
    },
    "673": {
      "sourceFileName": "packages/astro/src/stores/external.ts",
      "qualifiedName": "$userStore"
    },
    "674": {
      "sourceFileName": "packages/astro/src/internal/create-clerk-instance.ts",
      "qualifiedName": "updateClerkOptions"
    },
    "675": {
      "sourceFileName": "packages/astro/src/internal/create-clerk-instance.ts",
      "qualifiedName": "updateClerkOptions"
    },
    "676": {
      "sourceFileName": "packages/astro/src/internal/create-clerk-instance.ts",
      "qualifiedName": "options"
    },
    "677": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": ""
    },
    "678": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "AstroClerkCreateInstanceParams"
    },
    "679": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "680": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.publishableKey"
    },
    "681": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "AstroClerkIntegrationParams"
    },
    "682": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "AstroClerkUpdateOptions"
    },
    "683": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "BrowserClerk"
    },
    "684": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__experimental_closeUserVerification"
    },
    "685": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "686": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "687": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__experimental_openUserVerification"
    },
    "688": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "689": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "690": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "691": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__experimental_prefetchOrganizationSwitcher"
    },
    "692": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "693": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "694": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__internal_country"
    },
    "695": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__internal_getOption"
    },
    "696": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__internal_getOption"
    },
    "697": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "K"
    },
    "698": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "key"
    },
    "699": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.addListener"
    },
    "700": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "701": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "702": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "callback"
    },
    "703": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.authenticateWithCoinbaseWallet"
    },
    "704": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "705": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "706": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "707": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.authenticateWithGoogleOneTap"
    },
    "708": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "709": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "710": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "711": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.authenticateWithMetamask"
    },
    "712": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "713": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "714": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "715": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.authenticateWithWeb3"
    },
    "716": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "717": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "718": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "719": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterMultiSessionSingleSignOutUrl"
    },
    "720": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterMultiSessionSingleSignOutUrl"
    },
    "721": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignInUrl"
    },
    "722": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignInUrl"
    },
    "723": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignOutUrl"
    },
    "724": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignOutUrl"
    },
    "725": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignUpUrl"
    },
    "726": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignUpUrl"
    },
    "727": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildCreateOrganizationUrl"
    },
    "728": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildCreateOrganizationUrl"
    },
    "729": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildOrganizationProfileUrl"
    },
    "730": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildOrganizationProfileUrl"
    },
    "731": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildSignInUrl"
    },
    "732": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildSignInUrl"
    },
    "733": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "opts"
    },
    "734": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildSignUpUrl"
    },
    "735": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildSignUpUrl"
    },
    "736": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "opts"
    },
    "737": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildUrlWithAuth"
    },
    "738": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildUrlWithAuth"
    },
    "739": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "to"
    },
    "740": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildUserProfileUrl"
    },
    "741": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildUserProfileUrl"
    },
    "742": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildWaitlistUrl"
    },
    "743": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildWaitlistUrl"
    },
    "744": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.client"
    },
    "745": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeCreateOrganization"
    },
    "746": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "747": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "748": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeGoogleOneTap"
    },
    "749": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "750": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "751": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeOrganizationProfile"
    },
    "752": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "753": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "754": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeSignIn"
    },
    "755": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "756": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "757": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeSignUp"
    },
    "758": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "759": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "760": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeUserProfile"
    },
    "761": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "762": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "763": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeWaitlist"
    },
    "764": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "765": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "766": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "BrowserClerk.components"
    },
    "767": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.createOrganization"
    },
    "768": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "769": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "770": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "771": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.domain"
    },
    "772": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.frontendApi"
    },
    "773": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.getOrganization"
    },
    "774": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "775": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "776": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "organizationId"
    },
    "777": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.handleEmailLinkVerification"
    },
    "778": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "779": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "780": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "781": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "customNavigate"
    },
    "782": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "783": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "784": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "to"
    },
    "785": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.handleGoogleOneTapCallback"
    },
    "786": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "787": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "788": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "signInOrUp"
    },
    "789": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "790": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "customNavigate"
    },
    "791": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "792": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "793": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "to"
    },
    "794": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.handleRedirectCallback"
    },
    "795": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "796": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "797": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "798": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "customNavigate"
    },
    "799": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "800": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "801": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "to"
    },
    "802": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.handleUnauthenticated"
    },
    "803": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "804": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "805": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.instanceType"
    },
    "806": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.isSatellite"
    },
    "807": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.isStandardBrowser"
    },
    "808": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.joinWaitlist"
    },
    "809": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "810": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "811": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "812": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "HeadlessBrowserClerk.load"
    },
    "813": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "814": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "815": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "opts"
    },
    "816": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.loaded"
    },
    "817": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountCreateOrganization"
    },
    "818": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "819": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "820": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "821": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "822": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountOrganizationList"
    },
    "823": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "824": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "825": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "826": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "827": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountOrganizationProfile"
    },
    "828": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "829": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "830": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "831": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "832": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountOrganizationSwitcher"
    },
    "833": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "834": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "835": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "836": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "837": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountSignIn"
    },
    "838": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "839": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "840": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "841": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "signInProps"
    },
    "842": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountSignUp"
    },
    "843": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "844": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "845": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "846": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "signUpProps"
    },
    "847": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountUserButton"
    },
    "848": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "849": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "850": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "851": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "userButtonProps"
    },
    "852": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountUserProfile"
    },
    "853": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "854": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "855": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "856": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "userProfileProps"
    },
    "857": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountWaitlist"
    },
    "858": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "859": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "860": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "861": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "862": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.navigate"
    },
    "863": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "BrowserClerk.onComponentsReady"
    },
    "864": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openCreateOrganization"
    },
    "865": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "866": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "867": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "868": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openGoogleOneTap"
    },
    "869": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "870": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "871": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "872": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openOrganizationProfile"
    },
    "873": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "874": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "875": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "876": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openSignIn"
    },
    "877": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "878": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "879": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "880": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openSignUp"
    },
    "881": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "882": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "883": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "884": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openUserProfile"
    },
    "885": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "886": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "887": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "888": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openWaitlist"
    },
    "889": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "890": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "891": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "892": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.organization"
    },
    "893": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.proxyUrl"
    },
    "894": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.publishableKey"
    },
    "895": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToAfterSignIn"
    },
    "896": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "897": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "898": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToAfterSignOut"
    },
    "899": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "900": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "901": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToAfterSignUp"
    },
    "902": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "903": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "904": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToCreateOrganization"
    },
    "905": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "906": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "907": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToOrganizationProfile"
    },
    "908": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "909": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "910": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToSignIn"
    },
    "911": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToSignIn"
    },
    "912": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "opts"
    },
    "913": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToSignUp"
    },
    "914": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToSignUp"
    },
    "915": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "opts"
    },
    "916": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToUserProfile"
    },
    "917": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "918": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "919": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToWaitlist"
    },
    "920": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "921": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "922": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectWithAuth"
    },
    "923": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectWithAuth"
    },
    "924": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "to"
    },
    "925": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.sdkMetadata"
    },
    "926": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.session"
    },
    "927": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.setActive"
    },
    "928": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.signOut"
    },
    "929": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.telemetry"
    },
    "930": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountCreateOrganization"
    },
    "931": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "932": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "933": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "934": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountOrganizationList"
    },
    "935": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "936": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "937": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "938": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountOrganizationProfile"
    },
    "939": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "940": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "941": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "942": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountOrganizationSwitcher"
    },
    "943": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "944": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "945": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "946": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountSignIn"
    },
    "947": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "948": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "949": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "950": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountSignUp"
    },
    "951": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "952": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "953": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "954": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountUserButton"
    },
    "955": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "956": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "957": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "958": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountUserProfile"
    },
    "959": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "960": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "961": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "962": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountWaitlist"
    },
    "963": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "964": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "965": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "966": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "HeadlessBrowserClerk.updateClient"
    },
    "967": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "968": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "969": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "client"
    },
    "970": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.user"
    },
    "971": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.version"
    },
    "972": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "ButtonProps"
    },
    "973": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "Tag"
    },
    "974": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "975": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.as"
    },
    "976": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.asChild"
    },
    "977": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.mode"
    },
    "978": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "HeadlessBrowserClerk"
    },
    "979": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__experimental_closeUserVerification"
    },
    "980": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "981": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "982": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__experimental_openUserVerification"
    },
    "983": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "984": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "985": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "986": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__experimental_prefetchOrganizationSwitcher"
    },
    "987": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "988": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "989": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__internal_country"
    },
    "990": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__internal_getOption"
    },
    "991": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.__internal_getOption"
    },
    "992": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "K"
    },
    "993": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "key"
    },
    "994": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.addListener"
    },
    "995": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "996": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "997": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "callback"
    },
    "998": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.authenticateWithCoinbaseWallet"
    },
    "999": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1000": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1001": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "1002": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.authenticateWithGoogleOneTap"
    },
    "1003": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1004": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1005": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "1006": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.authenticateWithMetamask"
    },
    "1007": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1008": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1009": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "1010": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.authenticateWithWeb3"
    },
    "1011": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1012": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1013": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "1014": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterMultiSessionSingleSignOutUrl"
    },
    "1015": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterMultiSessionSingleSignOutUrl"
    },
    "1016": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignInUrl"
    },
    "1017": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignInUrl"
    },
    "1018": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignOutUrl"
    },
    "1019": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignOutUrl"
    },
    "1020": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignUpUrl"
    },
    "1021": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildAfterSignUpUrl"
    },
    "1022": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildCreateOrganizationUrl"
    },
    "1023": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildCreateOrganizationUrl"
    },
    "1024": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildOrganizationProfileUrl"
    },
    "1025": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildOrganizationProfileUrl"
    },
    "1026": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildSignInUrl"
    },
    "1027": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildSignInUrl"
    },
    "1028": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "opts"
    },
    "1029": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildSignUpUrl"
    },
    "1030": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildSignUpUrl"
    },
    "1031": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "opts"
    },
    "1032": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildUrlWithAuth"
    },
    "1033": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildUrlWithAuth"
    },
    "1034": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "to"
    },
    "1035": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildUserProfileUrl"
    },
    "1036": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildUserProfileUrl"
    },
    "1037": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildWaitlistUrl"
    },
    "1038": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.buildWaitlistUrl"
    },
    "1039": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.client"
    },
    "1040": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeCreateOrganization"
    },
    "1041": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1042": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1043": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeGoogleOneTap"
    },
    "1044": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1045": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1046": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeOrganizationProfile"
    },
    "1047": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1048": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1049": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeSignIn"
    },
    "1050": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1051": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1052": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeSignUp"
    },
    "1053": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1054": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1055": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeUserProfile"
    },
    "1056": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1057": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1058": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.closeWaitlist"
    },
    "1059": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1060": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1061": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.createOrganization"
    },
    "1062": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1063": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1064": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "1065": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.domain"
    },
    "1066": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.frontendApi"
    },
    "1067": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.getOrganization"
    },
    "1068": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1069": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1070": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "organizationId"
    },
    "1071": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.handleEmailLinkVerification"
    },
    "1072": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1073": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1074": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "1075": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "customNavigate"
    },
    "1076": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1077": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1078": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "to"
    },
    "1079": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.handleGoogleOneTapCallback"
    },
    "1080": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1081": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1082": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "signInOrUp"
    },
    "1083": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "1084": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "customNavigate"
    },
    "1085": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1086": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1087": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "to"
    },
    "1088": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.handleRedirectCallback"
    },
    "1089": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1090": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1091": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "1092": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "customNavigate"
    },
    "1093": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1094": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1095": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "to"
    },
    "1096": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.handleUnauthenticated"
    },
    "1097": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1098": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1099": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.instanceType"
    },
    "1100": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.isSatellite"
    },
    "1101": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.isStandardBrowser"
    },
    "1102": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.joinWaitlist"
    },
    "1103": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1104": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1105": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "params"
    },
    "1106": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "HeadlessBrowserClerk.load"
    },
    "1107": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "1108": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "1109": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "opts"
    },
    "1110": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.loaded"
    },
    "1111": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountCreateOrganization"
    },
    "1112": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1113": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1114": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1115": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1116": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountOrganizationList"
    },
    "1117": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1118": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1119": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1120": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1121": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountOrganizationProfile"
    },
    "1122": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1123": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1124": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1125": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1126": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountOrganizationSwitcher"
    },
    "1127": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1128": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1129": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1130": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1131": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountSignIn"
    },
    "1132": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1133": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1134": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1135": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "signInProps"
    },
    "1136": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountSignUp"
    },
    "1137": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1138": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1139": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1140": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "signUpProps"
    },
    "1141": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountUserButton"
    },
    "1142": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1143": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1144": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1145": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "userButtonProps"
    },
    "1146": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountUserProfile"
    },
    "1147": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1148": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1149": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1150": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "userProfileProps"
    },
    "1151": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.mountWaitlist"
    },
    "1152": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1153": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1154": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1155": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1156": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.navigate"
    },
    "1157": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openCreateOrganization"
    },
    "1158": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1159": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1160": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1161": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openGoogleOneTap"
    },
    "1162": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1163": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1164": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1165": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openOrganizationProfile"
    },
    "1166": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1167": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1168": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1169": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openSignIn"
    },
    "1170": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1171": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1172": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1173": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openSignUp"
    },
    "1174": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1175": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1176": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1177": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openUserProfile"
    },
    "1178": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1179": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1180": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1181": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.openWaitlist"
    },
    "1182": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1183": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1184": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "props"
    },
    "1185": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.organization"
    },
    "1186": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.proxyUrl"
    },
    "1187": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.publishableKey"
    },
    "1188": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToAfterSignIn"
    },
    "1189": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1190": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1191": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToAfterSignOut"
    },
    "1192": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1193": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1194": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToAfterSignUp"
    },
    "1195": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1196": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1197": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToCreateOrganization"
    },
    "1198": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1199": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1200": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToOrganizationProfile"
    },
    "1201": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1202": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1203": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToSignIn"
    },
    "1204": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToSignIn"
    },
    "1205": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "opts"
    },
    "1206": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToSignUp"
    },
    "1207": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToSignUp"
    },
    "1208": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "opts"
    },
    "1209": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToUserProfile"
    },
    "1210": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1211": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1212": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectToWaitlist"
    },
    "1213": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1214": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1215": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectWithAuth"
    },
    "1216": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.redirectWithAuth"
    },
    "1217": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "to"
    },
    "1218": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.sdkMetadata"
    },
    "1219": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.session"
    },
    "1220": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.setActive"
    },
    "1221": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.signOut"
    },
    "1222": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.telemetry"
    },
    "1223": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountCreateOrganization"
    },
    "1224": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1225": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1226": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1227": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountOrganizationList"
    },
    "1228": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1229": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1230": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1231": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountOrganizationProfile"
    },
    "1232": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1233": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1234": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1235": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountOrganizationSwitcher"
    },
    "1236": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1237": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1238": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1239": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountSignIn"
    },
    "1240": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1241": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1242": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1243": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountSignUp"
    },
    "1244": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1245": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1246": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1247": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountUserButton"
    },
    "1248": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1249": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1250": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1251": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountUserProfile"
    },
    "1252": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1253": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1254": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1255": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.unmountWaitlist"
    },
    "1256": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1257": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "__type"
    },
    "1258": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "targetNode"
    },
    "1259": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "HeadlessBrowserClerk.updateClient"
    },
    "1260": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "1261": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "1262": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "client"
    },
    "1263": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.user"
    },
    "1264": {
      "sourceFileName": "packages/types/src/index.ts",
      "qualifiedName": "Clerk.version"
    },
    "1265": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "ProtectProps"
    },
    "1266": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "1267": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.condition"
    },
    "1268": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.permission"
    },
    "1269": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.role"
    },
    "1270": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "1271": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.condition"
    },
    "1272": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.permission"
    },
    "1273": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.role"
    },
    "1274": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "1275": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.condition"
    },
    "1276": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "1277": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "1278": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "has"
    },
    "1279": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.permission"
    },
    "1280": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.role"
    },
    "1281": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type"
    },
    "1282": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.condition"
    },
    "1283": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.permission"
    },
    "1284": {
      "sourceFileName": "packages/astro/src/types.ts",
      "qualifiedName": "__type.role"
    }
  },
  "files": {
    "entries": {
      "1": "packages/astro/src/client/index.ts",
      "2": "packages/astro/src/types.ts",
      "3": "packages/localizations/README.md"
    },
    "reflections": {
      "1": 651,
      "2": 677
    }
  }
}
