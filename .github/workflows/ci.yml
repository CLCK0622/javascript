name: CI

on:
  workflow_dispatch:
  merge_group:
  pull_request:
    branches:
      - main
      - release/v4

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  formatting-linting:
    name: Formatting, linting & changeset checks
    runs-on: ${{ vars.RUNNER_LARGE || 'ubuntu-latest-l' }}
    timeout-minutes: ${{ vars.TIMEOUT_MINUTES_NORMAL && fromJSON(vars.TIMEOUT_MINUTES_NORMAL) || 10 }}

    env:
      # TODO: Update once actions/init/action.yml isn't pinned to 18.20.2
      NODE_VERSION: 18.20.3
      TURBO_SUMMARIZE: false

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: false

      - name: Setup
        id: config
        uses: ./.github/actions/init
        with:
          node-version: ${{ env.NODE_VERSION }}
          turbo-signature: ${{ secrets.TURBO_REMOTE_CACHE_SIGNATURE_KEY }}
          turbo-summarize: ${{ env.TURBO_SUMMARIZE }}
          turbo-team: ${{ vars.TURBO_TEAM }}
          turbo-token: ${{ secrets.TURBO_TOKEN }}

      - name: List node_modules
        run: npm ls
        shell: bash

      - name: Build Packages
        run: npx turbo build $TURBO_ARGS --only

      - name: Upload Turbo Summary
        uses: actions/upload-artifact@v3
        if: ${{ env.TURBO_SUMMARIZE == 'true' }}
        continue-on-error: true
        with:
          name: turbo-summary-report-lint-${{ github.run_id }}-${{ github.run_attempt }}
          path: .turbo/runs
          retention-days: 5

  integration-tests:
    name: Integration Tests
    needs: formatting-linting
    runs-on: ${{ vars.RUNNER_MEDIUM || 'ubuntu-latest-m' }}
    timeout-minutes: ${{ vars.TIMEOUT_MINUTES_LONG && fromJSON(vars.TIMEOUT_MINUTES_LONG) || 15 }}

    env:
      # TODO: Update once actions/init/action.yml isn't pinned to 18.20.2
      NODE_VERSION: 18.20.3

    strategy:
      matrix:
        test-name: ['generic']
        test-project: ['chrome']

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: false

      - name: Task Status
        id: task-status
        env:
          E2E_APP_CLERK_JS_DIR: ${{runner.temp}}
          E2E_CLERK_VERSION: 'latest'
          E2E_NEXTJS_VERSION: ${{ matrix.next-version }}
          E2E_PROJECT: ${{ matrix.test-project }}
          INTEGRATION_INSTANCE_KEYS: ${{ secrets.INTEGRATION_INSTANCE_KEYS }}
        run: |
          AFFECTED=0
          (npx turbo-ignore --task=test:integration:${{ matrix.test-name }} --fallback=${{ github.base_ref || 'refs/heads/main' }}) || AFFECTED=1
          echo "affected=${AFFECTED}" >> $GITHUB_OUTPUT

      - name: Setup
        if: ${{ steps.task-status.outputs.affected == '1' }}
        id: config
        uses: ./.github/actions/init
        with:
          node-version: ${{ env.NODE_VERSION }}
          turbo-signature: ${{ secrets.TURBO_REMOTE_CACHE_SIGNATURE_KEY }}
          turbo-team: ${{ vars.TURBO_TEAM }}
          turbo-token: ${{ secrets.TURBO_TOKEN }}
          playwright-enabled: true

      - name: Verdaccio
        if: ${{ steps.task-status.outputs.affected == '1' }}
        uses: ./.github/actions/verdaccio
        with:
          publish-cmd: |
            if [ "$(npm config get registry)" = "https://registry.npmjs.org/" ]; then echo 'Error: Using default registry' && exit 1; else npx turbo build $TURBO_ARGS --only && npx changeset publish --no-git-tag; fi

      - name: Install @clerk/backend in /integration
        if: ${{ steps.task-status.outputs.affected == '1' }}
        working-directory: ./integration
        run: npm init -y && npm install @clerk/backend

      - name: Install @clerk/clerk-js in os temp
        if: ${{ steps.task-status.outputs.affected == '1' }}
        working-directory: ${{runner.temp}}
        run: mkdir clerk-js && cd clerk-js && npm init -y && npm install @clerk/clerk-js

      - name: Run Integration Tests
        if: ${{ steps.task-status.outputs.affected == '1' }}
        id: integration-tests
        run: npx turbo test:integration:${{ matrix.test-name }} $TURBO_ARGS --only -- --project=${{ matrix.test-project }}
        env:
          E2E_APP_CLERK_JS_DIR: ${{runner.temp}}
          E2E_CLERK_VERSION: 'latest'
          E2E_NEXTJS_VERSION: ${{ matrix.next-version }}
          E2E_PROJECT: ${{ matrix.test-project }}
          INTEGRATION_INSTANCE_KEYS: ${{ secrets.INTEGRATION_INSTANCE_KEYS }}
          MAILSAC_API_KEY: ${{ secrets.MAILSAC_API_KEY }}

      - name: Upload test-results
        if: ${{ cancelled() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-${{ github.run_id }}-${{ github.run_attempt }}-${{ matrix.test-name }}
          path: integration/test-results
          retention-days: 1
